# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-04-13 02:16+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: original_texis/search.texi:6
#, no-wrap
msgid "Search"
msgstr ""

#. type: chapter
#: original_texis/search.texi:7
#, no-wrap
msgid "Searching and Replacement"
msgstr ""

#. type: cindex
#: original_texis/search.texi:8
#, no-wrap
msgid "searching"
msgstr ""

#. type: cindex
#: original_texis/search.texi:9
#, no-wrap
msgid "finding strings within text"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:15
msgid ""
"Like other editors, Emacs has commands to search for occurrences of a "
"string.  Emacs also has commands to replace occurrences of a string with a "
"different string.  There are also commands that do the same thing, but "
"search for patterns instead of fixed strings."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:20
msgid ""
"You can also search multiple files under the control of @code{xref} "
"(@pxref{Identifier Search}) or through the Dired @kbd{A} command "
"(@pxref{Operating on Files}), or ask the @code{grep} program to do it "
"(@pxref{Grep Searching})."
msgstr ""

#. type: section
#: original_texis/search.texi:35 original_texis/search.texi:37 original_texis/search.texi:38
#, no-wrap
msgid "Incremental Search"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:35
msgid "Search happens as you type the string."
msgstr ""

#. type: section
#: original_texis/search.texi:35 original_texis/search.texi:567 original_texis/search.texi:568
#, no-wrap
msgid "Nonincremental Search"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:35
msgid "Specify entire string and then search."
msgstr ""

#. type: section
#: original_texis/search.texi:35 original_texis/search.texi:603 original_texis/search.texi:604
#, no-wrap
msgid "Word Search"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:35
msgid "Search for sequence of words."
msgstr ""

#. type: section
#: original_texis/search.texi:35 original_texis/search.texi:678 original_texis/search.texi:679
#, no-wrap
msgid "Symbol Search"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:35
msgid "Search for a source code symbol."
msgstr ""

#. type: node
#: original_texis/search.texi:35 original_texis/search.texi:732
#, no-wrap
msgid "Regexp Search"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:35
msgid "Search for match for a regexp."
msgstr ""

#. type: node
#: original_texis/search.texi:35 original_texis/search.texi:819
#, no-wrap
msgid "Regexps"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:35
msgid "Syntax of regular expressions."
msgstr ""

#. type: node
#: original_texis/search.texi:35 original_texis/search.texi:1030
#, no-wrap
msgid "Regexp Backslash"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:35
msgid "Regular expression constructs starting with `\\'."
msgstr ""

#. type: node
#: original_texis/search.texi:35 original_texis/search.texi:1197
#, no-wrap
msgid "Regexp Example"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:35
msgid "A complex regular expression explained."
msgstr ""

#. type: node
#: original_texis/search.texi:35 original_texis/search.texi:1215
#, no-wrap
msgid "Lax Search"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:35
msgid "Search ignores some distinctions among similar characters, like letter-case."
msgstr ""

#. type: node
#: original_texis/search.texi:35 original_texis/search.texi:1341
#, no-wrap
msgid "Replace"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:35
msgid "Search, and replace some or all matches."
msgstr ""

#. type: node
#: original_texis/search.texi:35 original_texis/search.texi:1736
#, no-wrap
msgid "Other Repeating Search"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:35
msgid "Operating on all matches for some regexp."
msgstr ""

#. type: node
#: original_texis/search.texi:35 original_texis/search.texi:1881
#, no-wrap
msgid "Search Customizations"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:35
msgid "Various search customizations."
msgstr ""

#. type: cindex
#: original_texis/search.texi:39
#, no-wrap
msgid "incremental search"
msgstr ""

#. type: cindex
#: original_texis/search.texi:40
#, no-wrap
msgid "isearch"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:49
msgid ""
"The principal search command in Emacs is @dfn{incremental}: it begins "
"searching as soon as you type the first character of the search string.  As "
"you type in the search string, Emacs shows you where the string (as you have "
"typed it so far) would be found.  When you have typed enough characters to "
"identify the place you want, you can stop.  Depending on what you plan to do "
"next, you may or may not need to terminate the search explicitly with "
"@key{RET}."
msgstr ""

#. type: kindex
#: original_texis/search.texi:51 original_texis/search.texi:75 original_texis/search.texi:81
#, no-wrap
msgid "C-s"
msgstr ""

#. type: table
#: original_texis/search.texi:53
msgid "Incremental search forward (@code{isearch-forward})."
msgstr ""

#. type: item
#: original_texis/search.texi:53 original_texis/search.texi:77 original_texis/search.texi:153 original_texis/search.texi:1675
#, no-wrap
msgid "C-r"
msgstr ""

#. type: table
#: original_texis/search.texi:55
msgid "Incremental search backward (@code{isearch-backward})."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:59
msgid ""
"You can also invoke incremental search from the menu bar's "
"@samp{Edit->Search} menu."
msgstr ""

#. type: node
#: original_texis/search.texi:69 original_texis/search.texi:71
#, no-wrap
msgid "Basic Isearch"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:69
msgid "Basic incremental search commands."
msgstr ""

#. type: node
#: original_texis/search.texi:69 original_texis/search.texi:160
#, no-wrap
msgid "Repeat Isearch"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:69
msgid "Searching for the same string again."
msgstr ""

#. type: node
#: original_texis/search.texi:69 original_texis/search.texi:242
#, no-wrap
msgid "Isearch Yank"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:69
msgid ""
"Commands that grab text into the search string or else edit the search "
"string."
msgstr ""

#. type: node
#: original_texis/search.texi:69 original_texis/search.texi:297
#, no-wrap
msgid "Error in Isearch"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:69
msgid "When your string is not found."
msgstr ""

#. type: node
#: original_texis/search.texi:69 original_texis/search.texi:334
#, no-wrap
msgid "Special Isearch"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:69
msgid "Special input in incremental search."
msgstr ""

#. type: node
#: original_texis/search.texi:69 original_texis/search.texi:466
#, no-wrap
msgid "Not Exiting Isearch"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:69
msgid "Prefix argument and scrolling commands."
msgstr ""

#. type: node
#: original_texis/search.texi:69 original_texis/search.texi:543
#, no-wrap
msgid "Isearch Minibuffer"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:69
msgid "Incremental search of the minibuffer history."
msgstr ""

#. type: subsection
#: original_texis/search.texi:72
#, no-wrap
msgid "Basics of Incremental Search"
msgstr ""

#. type: table
#: original_texis/search.texi:77
msgid "Begin incremental search (@code{isearch-forward})."
msgstr ""

#. type: table
#: original_texis/search.texi:79
msgid "Begin reverse incremental search (@code{isearch-backward})."
msgstr ""

#. type: findex
#: original_texis/search.texi:82
#, no-wrap
msgid "isearch-forward"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:86
msgid ""
"@kbd{C-s} (@code{isearch-forward}) starts a forward incremental search.  It "
"reads characters from the keyboard, and moves point just past the end of the "
"next occurrence of those characters in the buffer."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:93
msgid ""
"For instance, if you type @kbd{C-s} and then @kbd{F}, that puts the cursor "
"after the first @samp{F} that occurs in the buffer after the starting "
"point.  If you then type @kbd{O}, the cursor moves to just after the first "
"@samp{FO}; the @samp{F} in that @samp{FO} might not be the first @samp{F} "
"previously found.  After another @kbd{O}, the cursor moves to just after the "
"first @samp{FOO}."
msgstr ""

#. type: cindex
#: original_texis/search.texi:94
#, no-wrap
msgid "faces for highlighting search matches"
msgstr ""

#. type: cindex
#: original_texis/search.texi:95
#, no-wrap
msgid "@code{isearch} face"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:101
msgid ""
"At each step, Emacs highlights the @dfn{current match}---the buffer text "
"that matches the search string---using the @code{isearch} face "
"(@pxref{Faces}).  @xref{Search Customizations}, for various options that "
"customize this highlighting.  The current search string is also displayed in "
"the echo area."
msgstr ""

#. type: cindex
#: original_texis/search.texi:102
#, no-wrap
msgid "isearch input item"
msgstr ""

#. type: cindex
#: original_texis/search.texi:103
#, no-wrap
msgid "input item, isearch"
msgstr ""

#. type: findex
#: original_texis/search.texi:104
#, no-wrap
msgid "isearch-delete-char"
msgstr ""

#. type: kindex
#: original_texis/search.texi:105
#, no-wrap
msgid "DEL @r{(Incremental search)}"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:114
msgid ""
"If you make a mistake typing the search string, type @key{DEL} "
"(@code{isearch-delete-char}).  Each @key{DEL} cancels the last input item "
"entered during the search.  Emacs records a new @dfn{input item} whenever "
"you type a command that changes the search string, the position of point, "
"the success or failure of the search, the direction of the search, the "
"position of the other end of the current search result, or the "
"``wrappedness'' of the search.  @xref{Error in Isearch}, for more about "
"dealing with unsuccessful search."
msgstr ""

#. type: cindex
#: original_texis/search.texi:115
#, no-wrap
msgid "exit incremental search"
msgstr ""

#. type: cindex
#: original_texis/search.texi:116
#, no-wrap
msgid "incremental search, exiting"
msgstr ""

#. type: findex
#: original_texis/search.texi:117
#, no-wrap
msgid "isearch-exit"
msgstr ""

#. type: kindex
#: original_texis/search.texi:118
#, no-wrap
msgid "RET @r{(Incremental search)}"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:132
msgid ""
"When you are satisfied with the place you have reached, type @key{RET} "
"(@code{isearch-exit}).  This stops searching, leaving the cursor where the "
"search brought it.  Also, any command not specially meaningful in searches "
"stops the searching and is then executed.  Thus, typing @kbd{C-a} exits the "
"search and then moves to the beginning of the line; typing one of the arrow "
"keys exits the search and performs the respective movement command; etc.  "
"@key{RET} is necessary only if the next command you want to type is a "
"printing character, @key{DEL}, @key{RET}, or another character that is "
"special within searches (@kbd{C-q}, @kbd{C-w}, @kbd{C-r}, @kbd{C-s}, "
"@kbd{C-y}, @kbd{M-y}, @kbd{M-r}, @kbd{M-c}, @kbd{M-e}, and some others "
"described below).  You can fine-tune the commands that exit the search; see "
"@ref{Not Exiting Isearch}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:136
msgid ""
"As a special exception, entering @key{RET} when the search string is empty "
"launches nonincremental search (@pxref{Nonincremental Search}).  (This can "
"be customized; see @ref{Search Customizations}.)"
msgstr ""

#. type: findex
#: original_texis/search.texi:137
#, no-wrap
msgid "isearch-abort"
msgstr ""

#. type: findex
#: original_texis/search.texi:138
#, no-wrap
msgid "isearch-cancel"
msgstr ""

#. type: kindex
#: original_texis/search.texi:139
#, no-wrap
msgid "C-g C-g @r{(Incremental Search)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:140
#, no-wrap
msgid "ESC ESC ESC @r{(Incremental Search)}"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:144
msgid ""
"To abandon the search and return to the place where you started, type "
"@kbd{@key{ESC} @key{ESC} @key{ESC}} (@code{isearch-cancel}) or @kbd{C-g C-g} "
"(@code{isearch-abort})."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:152
msgid ""
"When you exit the incremental search, it adds the original value of point to "
"the mark ring, without activating the mark; you can thus use @kbd{C-u "
"C-@key{SPC}} or @kbd{C-x C-x} to return to where you were before beginning "
"the search.  @xref{Mark Ring}.  (Emacs only does this if the mark was not "
"already active; if the mark was active when you started the search, both "
"@kbd{C-u C-@key{SPC}} and @kbd{C-x C-x} will go to the mark.)"
msgstr ""

#. type: findex
#: original_texis/search.texi:154
#, no-wrap
msgid "isearch-backward"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:159
msgid ""
"To search backwards, use @kbd{C-r} (@code{isearch-backward}) instead of "
"@kbd{C-s} to start the search.  A backward search finds matches that end "
"before the starting point, just as a forward search finds matches that begin "
"after it."
msgstr ""

#. type: subsection
#: original_texis/search.texi:161
#, no-wrap
msgid "Repeating Incremental Search"
msgstr ""

#. type: kindex
#: original_texis/search.texi:163
#, no-wrap
msgid "C-s @r{(Incremental Search)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:164
#, no-wrap
msgid "C-r @r{(Incremental Search)}"
msgstr ""

#. type: findex
#: original_texis/search.texi:165
#, no-wrap
msgid "isearch-repeat-forward"
msgstr ""

#. type: findex
#: original_texis/search.texi:166
#, no-wrap
msgid "isearch-repeat-backward"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:175
msgid ""
"Suppose you search forward for @samp{FOO} and find a match, but not the one "
"you expected to find: the @samp{FOO} you were aiming for occurs later in the "
"buffer.  In this event, type another @kbd{C-s} "
"(@code{isearch-repeat-forward}) to move to the next occurrence of the search "
"string.  You can repeat this any number of times.  If you overshoot, you can "
"cancel some @kbd{C-s} commands with @key{DEL}.  Similarly, each @kbd{C-r} "
"(@code{isearch-repeat-backward}) in a backward incremental search repeats "
"the backward search."
msgstr ""

#. type: cindex
#: original_texis/search.texi:176
#, no-wrap
msgid "lazy search highlighting"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:186
msgid ""
"If you pause for a little while during incremental search, Emacs highlights "
"all the other possible matches for the search string that are present on the "
"screen.  This helps you anticipate where you can get to by typing @kbd{C-s} "
"or @kbd{C-r} to repeat the search.  The other matches are highlighted "
"differently from the current match, using the customizable face "
"@code{lazy-highlight} (@pxref{Faces}).  If you don't like this feature, you "
"can disable it by setting @code{isearch-lazy-highlight} to @code{nil}.  For "
"other customizations related to highlighting matches, see @ref{Search "
"Customizations}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:194
msgid ""
"After exiting a search, you can search for the same string again by typing "
"just @kbd{C-s C-s}.  The first @kbd{C-s} is the key that invokes incremental "
"search, and the second @kbd{C-s} means to search again for the last search "
"string.  Similarly, @kbd{C-r C-r} searches backward for the last search "
"string.  In determining the last search string, it doesn't matter whether "
"that string was searched for with @kbd{C-s} or @kbd{C-r}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:199
msgid ""
"If you are searching forward but you realize you were looking for something "
"before the starting point, type @kbd{C-r} to switch to a backward search, "
"leaving the search string unchanged.  Similarly, @kbd{C-s} in a backward "
"search switches to a forward search."
msgstr ""

#. type: cindex
#: original_texis/search.texi:200
#, no-wrap
msgid "search, wrapping around"
msgstr ""

#. type: cindex
#: original_texis/search.texi:201
#, no-wrap
msgid "search, overwrapped"
msgstr ""

#. type: cindex
#: original_texis/search.texi:202
#, no-wrap
msgid "wrapped search"
msgstr ""

#. type: cindex
#: original_texis/search.texi:203
#, no-wrap
msgid "overwrapped search"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:212
msgid ""
"If a search is failing and you ask to repeat it by typing another @kbd{C-s}, "
"it starts again from the beginning of the buffer.  Repeating a failing "
"reverse search with @kbd{C-r} starts again from the end.  This is called "
"@dfn{wrapping around}, and @samp{Wrapped} appears in the search prompt once "
"this has happened.  If you keep on going past the original starting point of "
"the search, it changes to @samp{Overwrapped}, which means that you are "
"revisiting matches that you have already seen."
msgstr ""

#. type: cindex
#: original_texis/search.texi:213
#, no-wrap
msgid "search ring"
msgstr ""

#. type: findex
#: original_texis/search.texi:214
#, no-wrap
msgid "isearch-ring-advance"
msgstr ""

#. type: findex
#: original_texis/search.texi:215
#, no-wrap
msgid "isearch-ring-retreat"
msgstr ""

#. type: kindex
#: original_texis/search.texi:216
#, no-wrap
msgid "M-n @r{(Incremental search)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:217
#, no-wrap
msgid "M-p @r{(Incremental search)}"
msgstr ""

#. type: vindex
#: original_texis/search.texi:218
#, no-wrap
msgid "search-ring-max"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:228
msgid ""
"To reuse earlier search strings, use the @dfn{search ring}.  The commands "
"@kbd{M-p} (@code{isearch-ring-retreat}) and @kbd{M-n} "
"(@code{isearch-ring-advance}) move through the ring to pick a search string "
"to reuse.  These commands leave the selected search ring element in the "
"minibuffer, where you can edit it.  Type @kbd{C-s}/@kbd{C-r} or @key{RET} to "
"accept the string and start searching for it.  The number of most recently "
"used search strings saved in the search ring is specified by the variable "
"@code{search-ring-max}, 16 by default."
msgstr ""

#. type: cindex
#: original_texis/search.texi:229
#, no-wrap
msgid "incremental search, edit search string"
msgstr ""

#. type: cindex
#: original_texis/search.texi:230
#, no-wrap
msgid "interactively edit search string"
msgstr ""

#. type: findex
#: original_texis/search.texi:231
#, no-wrap
msgid "isearch-edit-string"
msgstr ""

#. type: kindex
#: original_texis/search.texi:232
#, no-wrap
msgid "M-e @r{(Incremental search)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:233
#, no-wrap
msgid "mouse-1 @r{in the minibuffer (Incremental Search)}"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:241
msgid ""
"To edit the current search string in the minibuffer without replacing it "
"with items from the search ring, type @kbd{M-e} (@code{isearch-edit-string}) "
"or click @kbd{mouse-1} in the minibuffer.  Type @key{RET}, @kbd{C-s} or "
"@kbd{C-r} to finish editing the string and search for it.  Type @kbd{C-f} or "
"@kbd{@key{RIGHT}} to add to the search string characters following point "
"from the buffer from which you started the search."
msgstr ""

#. type: subsection
#: original_texis/search.texi:243
#, no-wrap
msgid "Isearch Yanking"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:248
msgid ""
"In many cases, you will want to use text at or near point as your search "
"string.  The commands described in this subsection let you do that "
"conveniently."
msgstr ""

#. type: kindex
#: original_texis/search.texi:249
#, no-wrap
msgid "C-w @r{(Incremental search)}"
msgstr ""

#. type: findex
#: original_texis/search.texi:250
#, no-wrap
msgid "isearch-yank-word-or-char"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:255
msgid ""
"@kbd{C-w} (@code{isearch-yank-word-or-char}) appends the next character or "
"word at point to the search string.  This is an easy way to search for "
"another occurrence of the text at point.  (The decision of whether to copy a "
"character or a word is heuristic.)"
msgstr ""

#. type: kindex
#: original_texis/search.texi:256
#, no-wrap
msgid "M-s C-e @r{(Incremental search)}"
msgstr ""

#. type: findex
#: original_texis/search.texi:257
#, no-wrap
msgid "isearch-yank-line"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:262
msgid ""
"Similarly, @kbd{M-s C-e} (@code{isearch-yank-line}) appends the rest of the "
"current line to the search string.  If point is already at the end of a "
"line, it appends the next line.  With a prefix argument @var{n}, it appends "
"the next @var{n} lines."
msgstr ""

#. type: kindex
#: original_texis/search.texi:263
#, no-wrap
msgid "C-y @r{(Incremental search)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:264
#, no-wrap
msgid "M-y @r{(Incremental search)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:265
#, no-wrap
msgid "mouse-2 @r{in the minibuffer (Incremental search)}"
msgstr ""

#. type: findex
#: original_texis/search.texi:266
#, no-wrap
msgid "isearch-yank-kill"
msgstr ""

#. type: findex
#: original_texis/search.texi:267
#, no-wrap
msgid "isearch-yank-pop"
msgstr ""

#. type: findex
#: original_texis/search.texi:268
#, no-wrap
msgid "isearch-yank-x-selection"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:276
msgid ""
"Within incremental search, @kbd{C-y} (@code{isearch-yank-kill})  appends the "
"current kill to the search string.  @kbd{M-y} (@code{isearch-yank-pop}), if "
"called after @kbd{C-y}, replaces that appended text with an earlier kill, "
"similar to the usual @kbd{M-y} (@code{yank-pop}) command (@pxref{Yanking}).  "
"Clicking @kbd{mouse-2} in the echo area appends the current X selection "
"(@pxref{Primary Selection}) to the search string "
"(@code{isearch-yank-x-selection})."
msgstr ""

#. type: kindex
#: original_texis/search.texi:277
#, no-wrap
msgid "C-M-w @r{(Incremental search)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:278
#, no-wrap
msgid "C-M-y @r{(Incremental search)}"
msgstr ""

#. type: findex
#: original_texis/search.texi:279
#, no-wrap
msgid "isearch-del-char"
msgstr ""

#. type: findex
#: original_texis/search.texi:280
#, no-wrap
msgid "isearch-yank-char"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:289
msgid ""
"@kbd{C-M-w} (@code{isearch-del-char}) deletes the last character from the "
"search string, and @kbd{C-M-y} (@code{isearch-yank-char})  appends the "
"character after point to the search string.  An alternative method to add "
"the character after point is to enter the minibuffer with @kbd{M-e} "
"(@pxref{Repeat Isearch}) and type @kbd{C-f} or @kbd{@key{RIGHT}} at the end "
"of the search string in the minibuffer.  Each @kbd{C-f} or @kbd{@key{RIGHT}} "
"you type adds another character following point to the search string."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:296
msgid ""
"Normally, when the search is case-insensitive, text yanked into the search "
"string is converted to lower case, so that the search remains "
"case-insensitive (@pxref{Lax Search, case folding}).  However, if the value "
"of the variable @code{search-upper-case} (@pxref{Lax Search, "
"search-upper-case}) is other than @code{not-yanks}, that disables this "
"down-casing."
msgstr ""

#. type: subsection
#: original_texis/search.texi:298
#, no-wrap
msgid "Errors in Incremental Search"
msgstr ""

#. type: cindex
#: original_texis/search.texi:300
#, no-wrap
msgid "@code{isearch-fail} face"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:308
msgid ""
"If your string is not found at all, the echo area says @samp{Failing "
"I-Search}, and the cursor moves past the place where Emacs found as much of "
"your string as it could.  Thus, if you search for @samp{FOOT}, and there is "
"no @samp{FOOT}, you might see the cursor after the @samp{FOO} in "
"@samp{FOOL}.  In the echo area, the part of the search string that failed to "
"match is highlighted using the face @code{isearch-fail}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:319
msgid ""
"At this point, there are several things you can do.  If your string was "
"mistyped, use @key{DEL} to cancel a previous input item (@pxref{Basic "
"Isearch}), @kbd{C-M-w} to erase one character at a time, or @kbd{M-e} to "
"edit it.  If you like the place you have found, you can type @key{RET} to "
"remain there.  Or you can type @kbd{C-g}, which removes from the search "
"string the characters that could not be found (the @samp{T} in @samp{FOOT}), "
"leaving those that were found (the @samp{FOO} in @samp{FOOT}).  A second "
"@kbd{C-g} at that point cancels the search entirely, returning point to "
"where it was when the search started."
msgstr ""

#. type: cindex
#: original_texis/search.texi:320
#, no-wrap
msgid "quitting (in search)"
msgstr ""

#. type: kindex
#: original_texis/search.texi:321
#, no-wrap
msgid "C-g @r{(Incremental search)}"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:333
msgid ""
"The quit command, @kbd{C-g}, does special things during searches; just what "
"it does depends on the status of the search.  If the search has found what "
"you specified and is waiting for input, @kbd{C-g} cancels the entire search, "
"moving the cursor back to where you started the search.  If @kbd{C-g} is "
"typed when there are characters in the search string that have not been "
"found---because Emacs is still searching for them, or because it has failed "
"to find them---then the search string characters which have not been found "
"are discarded from the search string.  With them gone, the search is now "
"successful and waiting for more input, so a second @kbd{C-g} will cancel the "
"entire search."
msgstr ""

#. type: subsection
#: original_texis/search.texi:335
#, no-wrap
msgid "Special Input for Incremental Search"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:340
msgid ""
"In addition to characters described in the previous subsections, some of the "
"other characters you type during incremental search have special effects.  "
"They are described here."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:343
msgid ""
"To toggle lax space matching (@pxref{Lax Search, lax space matching}), type "
"@kbd{M-s @key{SPC}}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:347
msgid ""
"To toggle case sensitivity of the search, type @kbd{M-c} or @kbd{M-s c}.  "
"@xref{Lax Search, case folding}.  If the search string includes upper-case "
"letters, the search is case-sensitive by default."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:352
msgid ""
"To toggle whether or not the search will consider similar and equivalent "
"characters as a match, type @kbd{M-s '}.  @xref{Lax Search, character "
"folding}.  If the search string includes accented characters, that disables "
"character folding during that search."
msgstr ""

#. type: cindex
#: original_texis/search.texi:353
#, no-wrap
msgid "invisible text, searching for"
msgstr ""

#. type: kindex
#: original_texis/search.texi:354
#, no-wrap
msgid "M-s i @r{(Incremental search)}"
msgstr ""

#. type: findex
#: original_texis/search.texi:355
#, no-wrap
msgid "isearch-toggle-invisible"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:358
msgid ""
"To toggle whether or not invisible text is searched, type @kbd{M-s i} "
"(@code{isearch-toggle-invisible}).  @xref{Outline Search}."
msgstr ""

#. type: kindex
#: original_texis/search.texi:359
#, no-wrap
msgid "M-r @r{(Incremental Search)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:360
#, no-wrap
msgid "M-s r @r{(Incremental Search)}"
msgstr ""

#. type: findex
#: original_texis/search.texi:361
#, no-wrap
msgid "isearch-toggle-regexp"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:365
msgid ""
"To toggle between non-regexp and regexp incremental search, type @kbd{M-r} "
"or @kbd{M-s r} (@code{isearch-toggle-regexp}).  @xref{Regexp Search}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:367
msgid "To toggle symbol mode, type @kbd{M-s _}.  @xref{Symbol Search}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:370
msgid ""
"To search for a newline character, type @kbd{C-j} as part of the search "
"string."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:373
msgid ""
"To search for non-@acronym{ASCII} characters, use one of the following "
"methods:"
msgstr ""

#. type: findex
#: original_texis/search.texi:376
#, no-wrap
msgid "isearch-quote-char"
msgstr ""

#. type: kindex
#: original_texis/search.texi:377
#, no-wrap
msgid "C-q @r{(Incremental Search)}"
msgstr ""

#. type: itemize
#: original_texis/search.texi:384
msgid ""
"Type @kbd{C-q} (@code{isearch-quote-char}), followed by a non-graphic "
"character or a sequence of octal digits.  This adds a character to the "
"search string, similar to inserting into a buffer using @kbd{C-q} "
"(@pxref{Inserting Text}).  For example, @kbd{C-q C-s} during incremental "
"search adds the @samp{control-S} character to the search string."
msgstr ""

#. type: findex
#: original_texis/search.texi:386
#, no-wrap
msgid "isearch-char-by-name"
msgstr ""

#. type: kindex
#: original_texis/search.texi:387
#, no-wrap
msgid "C-x 8 RET @r{(Incremental Search)}"
msgstr ""

#. type: itemize
#: original_texis/search.texi:392
msgid ""
"Type @kbd{C-x 8 @key{RET}} (@code{isearch-char-by-name}), followed by a "
"Unicode name or code-point in hex.  This adds the specified character into "
"the search string, similar to the usual @code{insert-char} command "
"(@pxref{Inserting Text})."
msgstr ""

#. type: kindex
#: original_texis/search.texi:394
#, no-wrap
msgid "C-^ @r{(Incremental Search)}"
msgstr ""

#. type: findex
#: original_texis/search.texi:395
#, no-wrap
msgid "isearch-toggle-input-method"
msgstr ""

#. type: findex
#: original_texis/search.texi:396
#, no-wrap
msgid "isearch-toggle-specified-input-method"
msgstr ""

#. type: itemize
#: original_texis/search.texi:407
msgid ""
"Use an input method (@pxref{Input Methods}).  If an input method is enabled "
"in the current buffer when you start the search, the same method will be "
"active in the minibuffer when you type the search string.  While typing the "
"search string, you can toggle the input method with @kbd{C-\\} "
"(@code{isearch-toggle-input-method}).  You can also turn on a non-default "
"input method with @kbd{C-^} (@code{isearch-toggle-specified-input-method}), "
"which prompts for the name of the input method.  When an input method is "
"active during incremental search, the search prompt includes the input "
"method mnemonic, like this:"
msgstr ""

#. type: example
#: original_texis/search.texi:410
#, no-wrap
msgid "I-search [@var{im}]:\n"
msgstr ""

#. type: itemize
#: original_texis/search.texi:416
msgid ""
"where @var{im} is the mnemonic of the active input method.  Any input method "
"you enable during incremental search remains enabled in the current buffer "
"afterwards."
msgstr ""

#. type: kindex
#: original_texis/search.texi:418
#, no-wrap
msgid "M-s o @r{(Incremental Search)}"
msgstr ""

#. type: findex
#: original_texis/search.texi:419
#, no-wrap
msgid "isearch-occur"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:423
msgid ""
"Typing @kbd{M-s o} in incremental search invokes @code{isearch-occur}, which "
"runs @code{occur} with the current search string.  @xref{Other Repeating "
"Search, occur}."
msgstr ""

#. type: findex
#: original_texis/search.texi:424
#, no-wrap
msgid "isearch-query-replace"
msgstr ""

#. type: findex
#: original_texis/search.texi:425
#, no-wrap
msgid "isearch-query-replace-regexp"
msgstr ""

#. type: kindex
#: original_texis/search.texi:426
#, no-wrap
msgid "M-% @r{(Incremental search)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:427
#, no-wrap
msgid "C-M-% @r{(Incremental search)}"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:436
msgid ""
"Typing @kbd{M-%} (@code{isearch-query-replace}) in incremental search "
"invokes @code{query-replace} or @code{query-replace-regexp} (depending on "
"search mode) with the current search string used as the string to replace.  "
"A negative prefix argument means to replace backward.  @xref{Query "
"Replace}.  Typing @kbd{C-M-%} (@code{isearch-query-replace-regexp}) invokes "
"@code{query-replace-regexp} with the current search string used as the "
"regexp to replace."
msgstr ""

#. type: findex
#: original_texis/search.texi:437
#, no-wrap
msgid "isearch-complete"
msgstr ""

#. type: kindex
#: original_texis/search.texi:438
#, no-wrap
msgid "M-TAB @r{(Incremental search)}"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:446
msgid ""
"Typing @kbd{M-@key{TAB}} in incremental search invokes "
"@code{isearch-complete}, which attempts to complete the search string using "
"the search ring (the previous search strings you used) as a list of "
"completion alternatives.  @xref{Completion}.  In many operating systems, the "
"@kbd{M-@key{TAB}} key sequence is captured by the window manager; you then "
"need to rebind @code{isearch-complete} to another key sequence if you want "
"to use it (@pxref{Rebinding})."
msgstr ""

#. type: kindex
#: original_texis/search.texi:447
#, no-wrap
msgid "M-s h r @r{(Incremental Search)}"
msgstr ""

#. type: findex
#: original_texis/search.texi:448
#, no-wrap
msgid "isearch-highlight-regexp"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:456
msgid ""
"You can exit the search while leaving the matches for the last search string "
"highlighted on display.  To this end, type @kbd{M-s h r} "
"(@code{isearch-highlight-regexp}), which will run @code{highlight-regexp} "
"(@pxref{Highlight Interactively}) passing it the regexp derived from the "
"last search string and prompting you for the face to use for highlighting.  "
"To remove the highlighting, type @kbd{M-s h u} (@code{unhighlight-regexp})."
msgstr ""

#. type: cindex
#: original_texis/search.texi:457
#, no-wrap
msgid "incremental search, help on special keys"
msgstr ""

#. type: kindex
#: original_texis/search.texi:458
#, no-wrap
msgid "C-h C-h @r{(Incremental Search)}"
msgstr ""

#. type: findex
#: original_texis/search.texi:459
#, no-wrap
msgid "isearch-help-map"
msgstr ""

#. type: vindex
#: original_texis/search.texi:460
#, no-wrap
msgid "isearch-mode-map"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:465
msgid ""
"When incremental search is active, you can type @kbd{C-h C-h} "
"(@code{isearch-help-map}) to access interactive help options, including a "
"list of special key bindings.  These key bindings are part of the keymap "
"@code{isearch-mode-map} (@pxref{Keymaps})."
msgstr ""

#. type: subsection
#: original_texis/search.texi:467
#, no-wrap
msgid "Not Exiting Incremental Search"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:474
msgid ""
"This subsection describes how to control whether typing a command not "
"specifically meaningful in searches exits the search before executing the "
"command.  It also describes two categories of commands which you can type "
"without exiting the current incremental search, even though they are not "
"themselves part of incremental search."
msgstr ""

#. type: vindex
#: original_texis/search.texi:475
#, no-wrap
msgid "search-exit-option"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:485
msgid ""
"Normally, typing a command that is not bound by the incremental search exits "
"the search before executing the command.  Thus, the command operates on the "
"buffer from which you invoked the search.  However, if you customize the "
"variable @code{search-exit-option} to @code{nil}, the characters which you "
"type that are not interpreted by the incremental search are simply appended "
"to the search string.  This is so you could include in the search string "
"control characters, such as @kbd{C-a}, that would normally exit the search "
"and invoke the command bound to them on the buffer."
msgstr ""

#. type: item
#: original_texis/search.texi:487
#, no-wrap
msgid "Prefix Arguments"
msgstr ""

#. type: cindex
#: original_texis/search.texi:488
#, no-wrap
msgid "prefix argument commands, during incremental search"
msgstr ""

#. type: vindex
#: original_texis/search.texi:489
#, no-wrap
msgid "isearch-allow-prefix"
msgstr ""

#. type: table
#: original_texis/search.texi:495
msgid ""
"In incremental search, when you type a command that specifies a prefix "
"argument (@pxref{Arguments}), by default it will apply either to the next "
"action in the search or to the command that exits the search.  In other "
"words, entering a prefix argument will not by itself terminate the search."
msgstr ""

#. type: table
#: original_texis/search.texi:499
msgid ""
"In previous versions of Emacs, entering a prefix argument always terminated "
"the search.  You can revert to this behavior by setting the variable "
"@code{isearch-allow-prefix} to @code{nil}."
msgstr ""

#. type: table
#: original_texis/search.texi:504
msgid ""
"When @code{isearch-allow-scroll} is non-@code{nil} (see below), prefix "
"arguments always have the default behavior described above, i.e., they don't "
"terminate the search, even if @code{isearch-allow-prefix} is @code{nil}."
msgstr ""

#. type: item
#: original_texis/search.texi:505
#, no-wrap
msgid "Scrolling Commands"
msgstr ""

#. type: cindex
#: original_texis/search.texi:506
#, no-wrap
msgid "scrolling commands, during incremental search"
msgstr ""

#. type: vindex
#: original_texis/search.texi:507
#, no-wrap
msgid "isearch-allow-scroll"
msgstr ""

#. type: table
#: original_texis/search.texi:516
msgid ""
"Normally, scrolling commands exit incremental search.  If you change the "
"variable @code{isearch-allow-scroll} to a non-@code{nil} value, that enables "
"the use of the scroll-bar, as well as keyboard scrolling commands like "
"@kbd{C-v}, @kbd{M-v}, and @kbd{C-l} (@pxref{Scrolling}).  This applies only "
"to calling these commands via their bound key sequences---typing @kbd{M-x} "
"will still exit the search.  You can give prefix arguments to these commands "
"in the usual way.  This feature won't let you scroll the current match out "
"of visibility, however."
msgstr ""

#. type: table
#: original_texis/search.texi:524
msgid ""
"The @code{isearch-allow-scroll} feature also affects some other commands, "
"such as @kbd{C-x 2} (@code{split-window-below}) and @kbd{C-x ^} "
"(@code{enlarge-window}), which don't exactly scroll but do affect where the "
"text appears on the screen.  It applies to any command whose name has a "
"non-@code{nil} @code{isearch-scroll} property.  So you can control which "
"commands are affected by changing these properties."
msgstr ""

#. type: cindex
#: original_texis/search.texi:525
#, no-wrap
msgid "prevent commands from exiting incremental search"
msgstr ""

#. type: table
#: original_texis/search.texi:530
msgid ""
"For example, to make @kbd{C-h l} usable within an incremental search in all "
"future Emacs sessions, use @kbd{C-h c} to find what command it runs "
"(@pxref{Key Help}), which is @code{view-lossage}.  Then you can put the "
"following line in your init file (@pxref{Init File}):"
msgstr ""

#. type: example
#: original_texis/search.texi:533
#, no-wrap
msgid "(put 'view-lossage 'isearch-scroll t)\n"
msgstr ""

#. type: table
#: original_texis/search.texi:541
msgid ""
"This feature can be applied to any command that doesn't permanently change "
"point, the buffer contents, the match data, the current buffer, or the "
"selected window and frame.  The command must not itself attempt an "
"incremental search.  This feature is disabled if @code{isearch-allow-scroll} "
"is @code{nil} (which it is by default)."
msgstr ""

#. type: subsection
#: original_texis/search.texi:544
#, no-wrap
msgid "Searching the Minibuffer"
msgstr ""

#. type: cindex
#: original_texis/search.texi:545
#, no-wrap
msgid "minibuffer history, searching"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:551
msgid ""
"If you start an incremental search while the minibuffer is active, Emacs "
"searches the contents of the minibuffer.  Unlike searching an ordinary "
"buffer, the search string is not shown in the echo area, because that is "
"used to display the minibuffer."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:560
msgid ""
"If an incremental search fails in the minibuffer, it tries searching the "
"minibuffer history.  @xref{Minibuffer History}.  You can visualize the "
"minibuffer and its history as a series of pages, with the earliest history "
"element on the first page and the current minibuffer on the last page.  A "
"forward search, @kbd{C-s}, searches forward to later pages; a reverse "
"search, @kbd{C-r}, searches backwards to earlier pages.  Like in ordinary "
"buffer search, a failing search can wrap around, going from the last page to "
"the first page or vice versa."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:566
msgid ""
"When the current match is on a history element, that history element is "
"pulled into the minibuffer.  If you exit the incremental search normally "
"(e.g., by typing @key{RET}), it remains in the minibuffer afterwards.  "
"Canceling the search, with @kbd{C-g}, restores the contents of the "
"minibuffer when you began the search."
msgstr ""

#. type: cindex
#: original_texis/search.texi:569
#, no-wrap
msgid "nonincremental search"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:573
msgid ""
"Emacs also has conventional nonincremental search commands, which require "
"you to type the entire search string before searching begins."
msgstr ""

#. type: item
#: original_texis/search.texi:575
#, no-wrap
msgid "C-s @key{RET} @var{string} @key{RET}"
msgstr ""

#. type: table
#: original_texis/search.texi:577
msgid "Search for @var{string}."
msgstr ""

#. type: item
#: original_texis/search.texi:577
#, no-wrap
msgid "C-r @key{RET} @var{string} @key{RET}"
msgstr ""

#. type: table
#: original_texis/search.texi:579
msgid "Search backward for @var{string}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:585
msgid ""
"To start a nonincremental search, first type @kbd{C-s @key{RET}}.  This "
"enters the minibuffer to read the search string; terminate the string with "
"@key{RET}, and then the search takes place.  If the string is not found, the "
"search command signals an error."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:592
msgid ""
"When you type @kbd{C-s @key{RET}}, the @kbd{C-s} invokes incremental search "
"as usual.  That command is specially programmed to invoke the command for "
"nonincremental search, if the string you specify is empty.  (Such an empty "
"argument would otherwise be useless.)  @kbd{C-r @key{RET}} does likewise, "
"invoking the nonincremental backward-searching command."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:595
msgid ""
"Nonincremental search can also be invoked from the menu bar's "
"@samp{Edit->Search} menu."
msgstr ""

#. type: findex
#: original_texis/search.texi:596
#, no-wrap
msgid "search-forward"
msgstr ""

#. type: findex
#: original_texis/search.texi:597
#, no-wrap
msgid "search-backward"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:602
msgid ""
"You can also use two simpler commands, @kbd{M-x search-forward} and @kbd{M-x "
"search-backward}.  These commands look for the literal strings you specify, "
"and don't support any of the lax-search features (@pxref{Lax Search}) except "
"case folding."
msgstr ""

#. type: cindex
#: original_texis/search.texi:605
#, no-wrap
msgid "word search"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:617
msgid ""
"A @dfn{word search} finds a sequence of words without regard to the type of "
"punctuation between them.  For instance, if you enter a search string that "
"consists of two words separated by a single space, the search matches any "
"sequence of those two words separated by one or more spaces, newlines, or "
"other punctuation characters.  This is particularly useful for searching "
"text documents, because you don't have to worry whether the words you are "
"looking for are separated by newlines or spaces.  Note that major modes for "
"programming languages or other specialized modes can modify the definition "
"of a word to suit their syntactic needs."
msgstr ""

#. type: kindex
#: original_texis/search.texi:619 original_texis/search.texi:633
#, no-wrap
msgid "M-s w"
msgstr ""

#. type: table
#: original_texis/search.texi:623
msgid ""
"If incremental search is active, toggle word search mode "
"(@code{isearch-toggle-word}); otherwise, begin an incremental forward word "
"search (@code{isearch-forward-word})."
msgstr ""

#. type: item
#: original_texis/search.texi:623
#, no-wrap
msgid "M-s w @key{RET} @var{words} @key{RET}"
msgstr ""

#. type: table
#: original_texis/search.texi:625
msgid "Search for @var{words}, using a forward nonincremental word search."
msgstr ""

#. type: item
#: original_texis/search.texi:625
#, no-wrap
msgid "M-s w C-r @key{RET} @var{words} @key{RET}"
msgstr ""

#. type: table
#: original_texis/search.texi:627
msgid "Search backward for @var{words}, using a nonincremental word search."
msgstr ""

#. type: kindex
#: original_texis/search.texi:627 original_texis/search.texi:665
#, no-wrap
msgid "M-s M-w"
msgstr ""

#. type: table
#: original_texis/search.texi:629
msgid "Search the Web for the text in region."
msgstr ""

#. type: findex
#: original_texis/search.texi:631
#, no-wrap
msgid "isearch-forward-word"
msgstr ""

#. type: findex
#: original_texis/search.texi:632
#, no-wrap
msgid "isearch-toggle-word"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:642
msgid ""
"To begin a forward incremental word search, type @kbd{M-s w}.  If "
"incremental search is not already active, this runs the command "
"@code{isearch-forward-word}.  If incremental search is already active "
"(whether a forward or backward search), @kbd{M-s w} runs the command "
"@code{isearch-toggle-word}, which switches to a word search while keeping "
"the direction of the search and the current search string unchanged.  You "
"can toggle word search back off by typing @kbd{M-s w} again."
msgstr ""

#. type: findex
#: original_texis/search.texi:643
#, no-wrap
msgid "word-search-forward"
msgstr ""

#. type: findex
#: original_texis/search.texi:644
#, no-wrap
msgid "word-search-backward"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:649
msgid ""
"To begin a nonincremental word search, type @kbd{M-s w @key{RET}} for a "
"forward search, or @kbd{M-s w C-r @key{RET}} for a backward search.  These "
"run the commands @code{word-search-forward} and @code{word-search-backward} "
"respectively."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:660
msgid ""
"Incremental and nonincremental word searches differ slightly in the way they "
"find a match.  In a nonincremental word search, each word in the search "
"string must exactly match a whole word.  In an incremental word search, the "
"matching is more lax: while you are typing the search string, its first and "
"last words need not match whole words.  This is so that the matching can "
"proceed incrementally as you type.  This additional laxity does not apply to "
"the lazy highlight (@pxref{Incremental Search}), which always matches whole "
"words.  While you are typing the search string, @samp{Pending} appears in "
"the search prompt until you use a search repeating key like @kbd{C-s}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:664
msgid ""
"The word search commands don't perform character folding, and toggling lax "
"whitespace matching (@pxref{Lax Search, lax space matching}) has no effect "
"on them."
msgstr ""

#. type: findex
#: original_texis/search.texi:666
#, no-wrap
msgid "eww-search-words"
msgstr ""

#. type: vindex
#: original_texis/search.texi:667
#, no-wrap
msgid "eww-search-prefix"
msgstr ""

#. type: cindex
#: original_texis/search.texi:668
#, no-wrap
msgid "Internet search"
msgstr ""

#. type: cindex
#: original_texis/search.texi:669
#, no-wrap
msgid "search Internet for keywords"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:676
msgid ""
"To search the Web for the text in region, type @kbd{M-s M-w}.  This command "
"performs an Internet search for the words in region using the search engine "
"whose @acronym{URL} is specified by the variable @code{eww-search-prefix} "
"(@pxref{Basics, EWW, , eww, The Emacs Web Wowser Manual}).  If the region is "
"not active, or doesn't contain any words, this command prompts the user for "
"a URL or keywords to search."
msgstr ""

#. type: cindex
#: original_texis/search.texi:680
#, no-wrap
msgid "symbol search"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:690
msgid ""
"A @dfn{symbol search} is much like an ordinary search, except that the "
"boundaries of the search must match the boundaries of a symbol.  The meaning "
"of @dfn{symbol} in this context depends on the major mode, and usually "
"refers to a source code token, such as a Lisp symbol in Emacs Lisp mode.  "
"For instance, if you perform an incremental symbol search for the Lisp "
"symbol @code{forward-word}, it would not match @code{isearch-forward-word}.  "
"This feature is thus mainly useful for searching source code."
msgstr ""

#. type: kindex
#: original_texis/search.texi:692 original_texis/search.texi:706
#, no-wrap
msgid "M-s _"
msgstr ""

#. type: findex
#: original_texis/search.texi:693
#, no-wrap
msgid "isearch-toggle-symbol"
msgstr ""

#. type: table
#: original_texis/search.texi:697
msgid ""
"If incremental search is active, toggle symbol search mode "
"(@code{isearch-toggle-symbol}); otherwise, begin an incremental forward "
"symbol search (@code{isearch-forward-symbol})."
msgstr ""

#. type: kindex
#: original_texis/search.texi:697 original_texis/search.texi:707
#, no-wrap
msgid "M-s ."
msgstr ""

#. type: table
#: original_texis/search.texi:700
msgid ""
"Start a symbol incremental search forward with the symbol found near point "
"added to the search string initially."
msgstr ""

#. type: item
#: original_texis/search.texi:700
#, no-wrap
msgid "M-s _ @key{RET} @var{symbol} @key{RET}"
msgstr ""

#. type: table
#: original_texis/search.texi:702
msgid "Search forward for @var{symbol}, nonincrementally."
msgstr ""

#. type: item
#: original_texis/search.texi:702
#, no-wrap
msgid "M-s _ C-r @key{RET} @var{symbol} @key{RET}"
msgstr ""

#. type: table
#: original_texis/search.texi:704
msgid "Search backward for @var{symbol}, nonincrementally."
msgstr ""

#. type: findex
#: original_texis/search.texi:708
#, no-wrap
msgid "isearch-forward-symbol"
msgstr ""

#. type: findex
#: original_texis/search.texi:709
#, no-wrap
msgid "isearch-forward-symbol-at-point"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:721
msgid ""
"To begin a forward incremental symbol search, type @kbd{M-s _} (or @kbd{M-s "
".} if the symbol to search is near point).  If incremental search is not "
"already active, this runs the command @code{isearch-forward-symbol}.  If "
"incremental search is already active, @kbd{M-s _} switches to a symbol "
"search, preserving the direction of the search and the current search "
"string; you can disable symbol search by typing @kbd{M-s _} again.  In "
"incremental symbol search, while you are typing the search string, only the "
"beginning of the search string is required to match the beginning of a "
"symbol, and @samp{Pending} appears in the search prompt until you use a "
"search repeating key like @kbd{C-s}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:727
msgid ""
"To begin a nonincremental symbol search, type @kbd{M-s _ @key{RET}} for a "
"forward search, or @kbd{M-s _ C-r @key{RET}} or a backward search.  In "
"nonincremental symbol searches, the beginning and end of the search string "
"are required to match the beginning and end of a symbol, respectively."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:731
msgid ""
"The symbol search commands don't perform character folding, and toggling lax "
"whitespace matching (@pxref{Lax Search, lax space matching}) has no effect "
"on them."
msgstr ""

#. type: section
#: original_texis/search.texi:733
#, no-wrap
msgid "Regular Expression Search"
msgstr ""

#. type: cindex
#: original_texis/search.texi:734
#, no-wrap
msgid "regexp search"
msgstr ""

#. type: cindex
#: original_texis/search.texi:735
#, no-wrap
msgid "search for a regular expression"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:742
msgid ""
"A @dfn{regular expression} (or @dfn{regexp} for short) is a pattern that "
"denotes a class of alternative strings to match.  Emacs provides both "
"incremental and nonincremental ways to search for a match for a regexp.  The "
"syntax of regular expressions is explained in the next section."
msgstr ""

#. type: kindex
#: original_texis/search.texi:744 original_texis/search.texi:750
#, no-wrap
msgid "C-M-s"
msgstr ""

#. type: table
#: original_texis/search.texi:746
msgid "Begin incremental regexp search (@code{isearch-forward-regexp})."
msgstr ""

#. type: kindex
#: original_texis/search.texi:746 original_texis/search.texi:752
#, no-wrap
msgid "C-M-r"
msgstr ""

#. type: table
#: original_texis/search.texi:748
msgid "Begin reverse incremental regexp search (@code{isearch-backward-regexp})."
msgstr ""

#. type: findex
#: original_texis/search.texi:751
#, no-wrap
msgid "isearch-forward-regexp"
msgstr ""

#. type: findex
#: original_texis/search.texi:753
#, no-wrap
msgid "isearch-backward-regexp"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:765
msgid ""
"Incremental search for a regexp is done by typing @kbd{C-M-s} "
"(@code{isearch-forward-regexp}), by invoking @kbd{C-s} with a prefix "
"argument (whose value does not matter), or by typing @kbd{M-r} within a "
"forward incremental search.  This command reads a search string "
"incrementally just like @kbd{C-s}, but it treats the search string as a "
"regexp rather than looking for an exact match against the text in the "
"buffer.  Each time you add text to the search string, you make the regexp "
"longer, and the new regexp is searched for.  To search backward for a "
"regexp, use @kbd{C-M-r} (@code{isearch-backward-regexp}), @kbd{C-r} with a "
"prefix argument, or @kbd{M-r} within a backward incremental search."
msgstr ""

#. type: vindex
#: original_texis/search.texi:766
#, no-wrap
msgid "regexp-search-ring-max"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:776
msgid ""
"All of the special key sequences in an ordinary incremental search "
"(@pxref{Special Isearch}) do similar things in an incremental regexp "
"search.  For instance, typing @kbd{C-s} immediately after starting the "
"search retrieves the last incremental search regexp used and searches "
"forward for it.  Incremental regexp and non-regexp searches have independent "
"defaults.  They also have separate search rings, which you can access with "
"@kbd{M-p} and @kbd{M-n}.  The maximum number of search regexps saved in the "
"search ring is determined by the value of @code{regexp-search-ring-max}, 16 "
"by default."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:784
msgid ""
"Unlike ordinary incremental search, incremental regexp search does not use "
"lax space matching by default.  To toggle this feature use @kbd{M-s "
"@key{SPC}} (@code{isearch-toggle-lax-whitespace}).  Then any @key{SPC} typed "
"in incremental regexp search will match any sequence of one or more "
"whitespace characters.  The variable @code{search-whitespace-regexp} "
"specifies the regexp for the lax space matching.  @xref{Special Isearch}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:790
msgid ""
"Also unlike ordinary incremental search, incremental regexp search cannot "
"use character folding (@pxref{Lax Search}).  (If you toggle character "
"folding during incremental regexp search with @kbd{M-s '}, the search "
"becomes a non-regexp search and the search pattern you typed is interpreted "
"as a literal string.)"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:796
msgid ""
"In some cases, adding characters to the regexp in an incremental regexp "
"search can make the cursor move back and start again.  For example, if you "
"have searched for @samp{foo} and you add @samp{\\|bar}, the cursor backs up "
"in case the first @samp{bar} precedes the first @samp{foo}.  @xref{Regexps}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:803
msgid ""
"Forward and backward regexp search are not symmetrical, because regexp "
"matching in Emacs always operates forward, starting with the beginning of "
"the regexp.  Thus, forward regexp search scans forward, trying a forward "
"match at each possible starting position.  Backward regexp search scans "
"backward, trying a forward match at each possible starting position.  These "
"search methods are not mirror images."
msgstr ""

#. type: findex
#: original_texis/search.texi:804
#, no-wrap
msgid "re-search-forward"
msgstr ""

#. type: findex
#: original_texis/search.texi:805
#, no-wrap
msgid "re-search-backward"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:813
msgid ""
"Nonincremental search for a regexp is done with the commands "
"@code{re-search-forward} and @code{re-search-backward}.  You can invoke "
"these with @kbd{M-x}, or by way of incremental regexp search with @kbd{C-M-s "
"@key{RET}} and @kbd{C-M-r @key{RET}}.  When you invoke these commands with "
"@kbd{M-x}, they search for the exact regexp you specify, and thus don't "
"support any lax-search features (@pxref{Lax Search}) except case folding."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:818
msgid ""
"If you use the incremental regexp search commands with a prefix argument, "
"they perform ordinary string search, like @code{isearch-forward} and "
"@code{isearch-backward}.  @xref{Incremental Search}."
msgstr ""

#. type: section
#: original_texis/search.texi:820
#, no-wrap
msgid "Syntax of Regular Expressions"
msgstr ""

#. type: cindex
#: original_texis/search.texi:821
#, no-wrap
msgid "syntax of regexps"
msgstr ""

#. type: cindex
#: original_texis/search.texi:822
#, no-wrap
msgid "regular expression"
msgstr ""

#. type: cindex
#: original_texis/search.texi:823
#, no-wrap
msgid "regexp"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:829
msgid ""
"This section (and this manual in general) describes regular expression "
"features that users typically use.  @xref{Regular Expressions,,, elisp, The "
"Emacs Lisp Reference Manual}, for additional features used mainly in Lisp "
"programs."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:840
msgid ""
"Regular expressions have a syntax in which a few characters are special "
"constructs and the rest are @dfn{ordinary}.  An ordinary character matches "
"that same character and nothing else.  The special characters are "
"@samp{$^.*+?[\\}.  The character @samp{]} is special if it ends a character "
"alternative (see below).  The character @samp{-} is special inside a "
"character alternative.  Any other character appearing in a regular "
"expression is ordinary, unless a @samp{\\} precedes it.  (When you use "
"regular expressions in a Lisp program, each @samp{\\} must be doubled, see "
"the example near the end of this section.)"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:848
msgid ""
"For example, @samp{f} is not a special character, so it is ordinary, and "
"therefore @samp{f} is a regular expression that matches the string @samp{f} "
"and no other string.  (It does @emph{not} match the string @samp{ff}.)  "
"Likewise, @samp{o} is a regular expression that matches only @samp{o}.  "
"(When case distinctions are being ignored, these regexps also match @samp{F} "
"and @samp{O}, but we consider this a generalization of ``the same string'', "
"rather than an exception.)"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:857
msgid ""
"Any two regular expressions @var{a} and @var{b} can be concatenated.  The "
"result is a regular expression which matches a string if @var{a} matches "
"some amount of the beginning of that string and @var{b} matches the rest of "
"the string.  As a trivial example, concatenating the regular expressions "
"@samp{f} and @samp{o} gives the regular expression @samp{fo}, which matches "
"only the string @samp{fo}.  To do something less trivial, you need to use "
"one of the special characters.  Here is a list of them."
msgstr ""

#. type: item
#: original_texis/search.texi:859
#, no-wrap
msgid "@kbd{.}@: @r{(Period)}"
msgstr ""

#. type: table
#: original_texis/search.texi:864
msgid ""
"is a special character that matches any single character except a newline.  "
"For example, the regular expressions @samp{a.b} matches any three-character "
"string that begins with @samp{a} and ends with @samp{b}."
msgstr ""

#. type: kbd{#1}
#: original_texis/search.texi:865
#, no-wrap
msgid "*"
msgstr ""

#. type: table
#: original_texis/search.texi:870
msgid ""
"is not a construct by itself; it is a postfix operator that means to match "
"the preceding regular expression repetitively any number of times, as many "
"times as possible.  Thus, @samp{o*} matches any number of @samp{o}s, "
"including no @samp{o}s."
msgstr ""

#. type: table
#: original_texis/search.texi:874
msgid ""
"@samp{*} always applies to the @emph{smallest} possible preceding "
"expression.  Thus, @samp{fo*} has a repeating @samp{o}, not a repeating "
"@samp{fo}.  It matches @samp{f}, @samp{fo}, @samp{foo}, and so on."
msgstr ""

#. type: table
#: original_texis/search.texi:885
msgid ""
"The matcher processes a @samp{*} construct by matching, immediately, as many "
"repetitions as can be found.  Then it continues with the rest of the "
"pattern.  If that fails, backtracking occurs, discarding some of the matches "
"of the @samp{*}-modified construct in case that makes it possible to match "
"the rest of the pattern.  For example, in matching @samp{ca*ar} against the "
"string @samp{caaar}, the @samp{a*} first tries to match all three @samp{a}s; "
"but the rest of the pattern is @samp{ar} and there is only @samp{r} left to "
"match, so this try fails.  The next alternative is for @samp{a*} to match "
"only two @samp{a}s.  With this choice, the rest of the regexp matches "
"successfully."
msgstr ""

#. type: kbd{#1}
#: original_texis/search.texi:886
#, no-wrap
msgid "+"
msgstr ""

#. type: table
#: original_texis/search.texi:891
msgid ""
"is a postfix operator, similar to @samp{*} except that it must match the "
"preceding expression at least once.  Thus, @samp{ca+r} matches the strings "
"@samp{car} and @samp{caaaar} but not the string @samp{cr}, whereas "
"@samp{ca*r} matches all three strings."
msgstr ""

#. type: itemx
#: original_texis/search.texi:892 original_texis/search.texi:1711
#, no-wrap
msgid "?"
msgstr ""

#. type: table
#: original_texis/search.texi:896
msgid ""
"is a postfix operator, similar to @samp{*} except that it can match the "
"preceding expression either once or not at all.  Thus, @samp{ca?r} matches "
"@samp{car} or @samp{cr}, and nothing else."
msgstr ""

#. type: item
#: original_texis/search.texi:897
#, no-wrap
msgid "@kbd{*?}, @kbd{+?}, @kbd{??}"
msgstr ""

#. type: cindex
#: original_texis/search.texi:898
#, no-wrap
msgid "non-greedy regexp matching"
msgstr ""

#. type: table
#: original_texis/search.texi:903
msgid ""
"are non-@dfn{greedy} variants of the operators above.  The normal operators "
"@samp{*}, @samp{+}, @samp{?} match as much as they can, as long as the "
"overall regexp can still match.  With a following @samp{?}, they will match "
"as little as possible."
msgstr ""

#. type: table
#: original_texis/search.texi:909
msgid ""
"Thus, both @samp{ab*} and @samp{ab*?} can match the string @samp{a} and the "
"string @samp{abbbb}; but if you try to match them both against the text "
"@samp{abbb}, @samp{ab*} will match it all (the longest valid match), while "
"@samp{ab*?} will match just @samp{a} (the shortest valid match)."
msgstr ""

#. type: table
#: original_texis/search.texi:916
msgid ""
"Non-greedy operators match the shortest possible string starting at a given "
"starting point; in a forward search, though, the earliest possible starting "
"point for match is always the one chosen.  Thus, if you search for "
"@samp{a.*?$} against the text @samp{abbab} followed by a newline, it matches "
"the whole string.  Since it @emph{can} match starting at the first @samp{a}, "
"it does."
msgstr ""

#. type: kbd{#1}
#: original_texis/search.texi:917
#, no-wrap
msgid "\\@{@var{n}\\@}"
msgstr ""

#. type: table
#: original_texis/search.texi:922
msgid ""
"is a postfix operator specifying @var{n} repetitions---that is, the "
"preceding regular expression must match exactly @var{n} times in a row.  For "
"example, @samp{x\\@{4\\@}} matches the string @samp{xxxx} and nothing else."
msgstr ""

#. type: kbd{#1}
#: original_texis/search.texi:923
#, no-wrap
msgid "\\@{@var{n},@var{m}\\@}"
msgstr ""

#. type: table
#: original_texis/search.texi:931
msgid ""
"is a postfix operator specifying between @var{n} and @var{m} "
"repetitions---that is, the preceding regular expression must match at least "
"@var{n} times, but no more than @var{m} times.  If @var{m} is omitted, then "
"there is no upper limit, but the preceding regular expression must match at "
"least @var{n} times.@* @samp{\\@{0,1\\@}} is equivalent to @samp{?}. @* "
"@samp{\\@{0,\\@}} is equivalent to @samp{*}. @* @samp{\\@{1,\\@}} is "
"equivalent to @samp{+}."
msgstr ""

#. type: kbd{#1}
#: original_texis/search.texi:932
#, no-wrap
msgid "[ @dots{} ]"
msgstr ""

#. type: table
#: original_texis/search.texi:935
msgid ""
"is a @dfn{character set}, beginning with @samp{[} and terminated by "
"@samp{]}."
msgstr ""

#. type: table
#: original_texis/search.texi:942
msgid ""
"In the simplest case, the characters between the two brackets are what this "
"set can match.  Thus, @samp{[ad]} matches either one @samp{a} or one "
"@samp{d}, and @samp{[ad]*} matches any string composed of just @samp{a}s and "
"@samp{d}s (including the empty string).  It follows that @samp{c[ad]*r} "
"matches @samp{cr}, @samp{car}, @samp{cdr}, @samp{caddaar}, etc."
msgstr ""

#. type: table
#: original_texis/search.texi:950
msgid ""
"You can also include character ranges in a character set, by writing the "
"starting and ending characters with a @samp{-} between them.  Thus, "
"@samp{[a-z]} matches any lower-case @acronym{ASCII} letter.  Ranges may be "
"intermixed freely with individual characters, as in @samp{[a-z$%.]}, which "
"matches any lower-case @acronym{ASCII} letter or @samp{$}, @samp{%} or "
"period.  As another example, @samp{[α-ωί]} matches all lower-case Greek "
"letters."
msgstr ""

#. type: table
#: original_texis/search.texi:957
msgid ""
"You can also include certain special @dfn{character classes} in a character "
"set.  A @samp{[:} and balancing @samp{:]} enclose a character class inside a "
"character alternative.  For instance, @samp{[[:alnum:]]} matches any letter "
"or digit.  @xref{Char Classes,,, elisp, The Emacs Lisp Reference Manual}, "
"for a list of character classes."
msgstr ""

#. type: table
#: original_texis/search.texi:963
msgid ""
"To include a @samp{]} in a character set, you must make it the first "
"character.  For example, @samp{[]a]} matches @samp{]} or @samp{a}.  To "
"include a @samp{-}, write @samp{-} as the first or last character of the "
"set, or put it after a range.  Thus, @samp{[]-]} matches both @samp{]} and "
"@samp{-}."
msgstr ""

#. type: table
#: original_texis/search.texi:966
msgid ""
"To include @samp{^} in a set, put it anywhere but at the beginning of the "
"set.  (At the beginning, it complements the set---see below.)"
msgstr ""

#. type: table
#: original_texis/search.texi:971
msgid ""
"When you use a range in case-insensitive search, you should write both ends "
"of the range in upper case, or both in lower case, or both should be "
"non-letters.  The behavior of a mixed-case range such as @samp{A-z} is "
"somewhat ill-defined, and it may change in future Emacs versions."
msgstr ""

#. type: kbd{#1}
#: original_texis/search.texi:972
#, no-wrap
msgid "[^ @dots{} ]"
msgstr ""

#. type: table
#: original_texis/search.texi:976
msgid ""
"@samp{[^} begins a @dfn{complemented character set}, which matches any "
"character except the ones specified.  Thus, @samp{[^a-z0-9A-Z]} matches all "
"characters @emph{except} @acronym{ASCII} letters and digits."
msgstr ""

#. type: table
#: original_texis/search.texi:980
msgid ""
"@samp{^} is not special in a character set unless it is the first "
"character.  The character following the @samp{^} is treated as if it were "
"first (in other words, @samp{-} and @samp{]} are not special there)."
msgstr ""

#. type: table
#: original_texis/search.texi:984
msgid ""
"A complemented character set can match a newline, unless newline is "
"mentioned as one of the characters not to match.  This is in contrast to the "
"handling of regexps in programs such as @code{grep}."
msgstr ""

#. type: item
#: original_texis/search.texi:985 original_texis/search.texi:1662
#, no-wrap
msgid "^"
msgstr ""

#. type: table
#: original_texis/search.texi:990
msgid ""
"is a special character that matches the empty string, but only at the "
"beginning of a line in the text being matched.  Otherwise it fails to match "
"anything.  Thus, @samp{^foo} matches a @samp{foo} that occurs at the "
"beginning of a line."
msgstr ""

#. type: table
#: original_texis/search.texi:994
msgid ""
"For historical compatibility reasons, @samp{^} can be used with this meaning "
"only at the beginning of the regular expression, or after @samp{\\(} or "
"@samp{\\|}."
msgstr ""

#. type: kbd{#1}
#: original_texis/search.texi:995
#, no-wrap
msgid "$"
msgstr ""

#. type: table
#: original_texis/search.texi:998
msgid ""
"is similar to @samp{^} but matches only at the end of a line.  Thus, "
"@samp{x+$} matches a string of one @samp{x} or more at the end of a line."
msgstr ""

#. type: table
#: original_texis/search.texi:1002
msgid ""
"For historical compatibility reasons, @samp{$} can be used with this meaning "
"only at the end of the regular expression, or before @samp{\\)} or "
"@samp{\\|}."
msgstr ""

#. type: kbd{#1}
#: original_texis/search.texi:1003
#, no-wrap
msgid "\\"
msgstr ""

#. type: table
#: original_texis/search.texi:1006
msgid ""
"has two functions: it quotes the special characters (including @samp{\\}), "
"and it introduces additional special constructs."
msgstr ""

#. type: table
#: original_texis/search.texi:1010
msgid ""
"Because @samp{\\} quotes special characters, @samp{\\$} is a regular "
"expression that matches only @samp{$}, and @samp{\\[} is a regular "
"expression that matches only @samp{[}, and so on."
msgstr ""

#. type: table
#: original_texis/search.texi:1013
msgid ""
"See the following section for the special constructs that begin with "
"@samp{\\}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1021
msgid ""
"Note: for historical compatibility, special characters are treated as "
"ordinary ones if they are in contexts where their special meanings make no "
"sense.  For example, @samp{*foo} treats @samp{*} as ordinary since there is "
"no preceding expression on which the @samp{*} can act.  It is poor practice "
"to depend on this behavior; it is better to quote the special character "
"anyway, regardless of where it appears."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1029
msgid ""
"As a @samp{\\} is not special inside a character alternative, it can never "
"remove the special meaning of @samp{-} or @samp{]}.  So you should not quote "
"these characters when they have no special meaning either.  This would not "
"clarify anything, since backslashes can legitimately precede these "
"characters where they @emph{have} special meaning, as in @samp{[^\\]} "
"(@code{\"[^\\\\]\"} for Lisp string syntax), which matches any single "
"character except a backslash."
msgstr ""

#. type: section
#: original_texis/search.texi:1031
#, no-wrap
msgid "Backslash in Regular Expressions"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1038
msgid ""
"For the most part, @samp{\\} followed by any character matches only that "
"character.  However, there are several exceptions: two-character sequences "
"starting with @samp{\\} that have special meanings.  The second character in "
"the sequence is always an ordinary character when used on its own.  Here is "
"a table of @samp{\\} constructs."
msgstr ""

#. type: item
#: original_texis/search.texi:1040
#, no-wrap
msgid "\\|"
msgstr ""

#. type: table
#: original_texis/search.texi:1045
msgid ""
"specifies an alternative.  Two regular expressions @var{a} and @var{b} with "
"@samp{\\|} in between form an expression that matches some text if either "
"@var{a} matches it or @var{b} matches it.  It works by trying to match "
"@var{a}, and if that fails, by trying to match @var{b}."
msgstr ""

#. type: table
#: original_texis/search.texi:1048
msgid ""
"Thus, @samp{foo\\|bar} matches either @samp{foo} or @samp{bar} but no other "
"string."
msgstr ""

#. type: table
#: original_texis/search.texi:1052
msgid ""
"@samp{\\|} applies to the largest possible surrounding expressions.  Only a "
"surrounding @samp{\\( @dots{} \\)} grouping can limit the grouping power of "
"@samp{\\|}."
msgstr ""

#. type: table
#: original_texis/search.texi:1054
msgid "Full backtracking capability exists to handle multiple uses of @samp{\\|}."
msgstr ""

#. type: item
#: original_texis/search.texi:1055
#, no-wrap
msgid "\\( @dots{} \\)"
msgstr ""

#. type: table
#: original_texis/search.texi:1057
msgid "is a grouping construct that serves three purposes:"
msgstr ""

#. type: enumerate
#: original_texis/search.texi:1062
msgid ""
"To enclose a set of @samp{\\|} alternatives for other operations.  Thus, "
"@samp{\\(foo\\|bar\\)x} matches either @samp{foox} or @samp{barx}."
msgstr ""

#. type: enumerate
#: original_texis/search.texi:1068
msgid ""
"To enclose a complicated expression for the postfix operators @samp{*}, "
"@samp{+} and @samp{?} to operate on.  Thus, @samp{ba\\(na\\)*} matches "
"@samp{bananana}, etc., with any (zero or more) number of @samp{na} strings."
msgstr ""

#. type: enumerate
#: original_texis/search.texi:1071
msgid "To record a matched substring for future reference."
msgstr ""

#. type: table
#: original_texis/search.texi:1078
msgid ""
"This last application is not a consequence of the idea of a parenthetical "
"grouping; it is a separate feature that is assigned as a second meaning to "
"the same @w{@samp{\\( @dots{} \\)}} construct.  In practice there is usually "
"no conflict between the two meanings; when there is a conflict, you can use "
"a shy group, described below."
msgstr ""

#. type: item
#: original_texis/search.texi:1079
#, no-wrap
msgid "\\(?: @dots{} \\)"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1080
#, no-wrap
msgid "shy group, in regexp"
msgstr ""

#. type: table
#: original_texis/search.texi:1086
msgid ""
"specifies a @dfn{shy group} that does not record the matched substring; you "
"can't refer back to it with @samp{\\@var{d}} (see below).  This is useful in "
"mechanically combining regular expressions, so that you can add groups for "
"syntactic purposes without interfering with the numbering of the groups that "
"are meant to be referred to."
msgstr ""

#. type: item
#: original_texis/search.texi:1087
#, no-wrap
msgid "\\@var{d}"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1088
#, no-wrap
msgid "back reference, in regexp"
msgstr ""

#. type: table
#: original_texis/search.texi:1092
msgid ""
"matches the same text that matched the @var{d}th occurrence of a @samp{\\( "
"@dots{} \\)} construct.  This is called a @dfn{back reference}."
msgstr ""

#. type: table
#: original_texis/search.texi:1098
msgid ""
"After the end of a @samp{\\( @dots{} \\)} construct, the matcher remembers "
"the beginning and end of the text matched by that construct.  Then, later on "
"in the regular expression, you can use @samp{\\} followed by the digit "
"@var{d} to mean ``match the same text matched the @var{d}th time by the "
"@samp{\\( @dots{} \\)} construct''."
msgstr ""

#. type: table
#: original_texis/search.texi:1104
msgid ""
"The strings matching the first nine @samp{\\( @dots{} \\)} constructs "
"appearing in a regular expression are assigned numbers 1 through 9 in the "
"order that the open-parentheses appear in the regular expression.  So you "
"can use @samp{\\1} through @samp{\\9} to refer to the text matched by the "
"corresponding @samp{\\( @dots{} \\)} constructs."
msgstr ""

#. type: table
#: original_texis/search.texi:1109
msgid ""
"For example, @samp{\\(.*\\)\\1} matches any newline-free string that is "
"composed of two identical halves.  The @samp{\\(.*\\)} matches the first "
"half, which may be anything, but the @samp{\\1} that follows must match the "
"same exact text."
msgstr ""

#. type: table
#: original_texis/search.texi:1113
msgid ""
"If a particular @samp{\\( @dots{} \\)} construct matches more than once "
"(which can easily happen if it is followed by @samp{*}), only the last match "
"is recorded."
msgstr ""

#. type: item
#: original_texis/search.texi:1114
#, no-wrap
msgid "\\`"
msgstr ""

#. type: table
#: original_texis/search.texi:1117
msgid ""
"matches the empty string, but only at the beginning of the string or buffer "
"(or its accessible portion) being matched against."
msgstr ""

#. type: item
#: original_texis/search.texi:1118
#, no-wrap
msgid "\\'"
msgstr ""

#. type: table
#: original_texis/search.texi:1121
msgid ""
"matches the empty string, but only at the end of the string or buffer (or "
"its accessible portion) being matched against."
msgstr ""

#. type: item
#: original_texis/search.texi:1122
#, no-wrap
msgid "\\="
msgstr ""

#. type: table
#: original_texis/search.texi:1124
msgid "matches the empty string, but only at point."
msgstr ""

#. type: item
#: original_texis/search.texi:1125
#, no-wrap
msgid "\\b"
msgstr ""

#. type: table
#: original_texis/search.texi:1130
msgid ""
"matches the empty string, but only at the beginning or end of a word.  Thus, "
"@samp{\\bfoo\\b} matches any occurrence of @samp{foo} as a separate word.  "
"@samp{\\bballs?\\b} matches @samp{ball} or @samp{balls} as a separate word."
msgstr ""

#. type: table
#: original_texis/search.texi:1133
msgid ""
"@samp{\\b} matches at the beginning or end of the buffer regardless of what "
"text appears next to it."
msgstr ""

#. type: item
#: original_texis/search.texi:1134
#, no-wrap
msgid "\\B"
msgstr ""

#. type: table
#: original_texis/search.texi:1137
msgid "matches the empty string, but @emph{not} at the beginning or end of a word."
msgstr ""

#. type: item
#: original_texis/search.texi:1138
#, no-wrap
msgid "\\<"
msgstr ""

#. type: table
#: original_texis/search.texi:1142
msgid ""
"matches the empty string, but only at the beginning of a word.  @samp{\\<} "
"matches at the beginning of the buffer only if a word-constituent character "
"follows."
msgstr ""

#. type: item
#: original_texis/search.texi:1143
#, no-wrap
msgid "\\>"
msgstr ""

#. type: table
#: original_texis/search.texi:1147
msgid ""
"matches the empty string, but only at the end of a word.  @samp{\\>} matches "
"at the end of the buffer only if the contents end with a word-constituent "
"character."
msgstr ""

#. type: item
#: original_texis/search.texi:1148
#, no-wrap
msgid "\\w"
msgstr ""

#. type: table
#: original_texis/search.texi:1152
msgid ""
"matches any word-constituent character.  The syntax table determines which "
"characters these are.  @xref{Syntax Tables,, Syntax Tables, elisp, The Emacs "
"Lisp Reference Manual}."
msgstr ""

#. type: item
#: original_texis/search.texi:1153
#, no-wrap
msgid "\\W"
msgstr ""

#. type: table
#: original_texis/search.texi:1155
msgid "matches any character that is not a word-constituent."
msgstr ""

#. type: item
#: original_texis/search.texi:1156
#, no-wrap
msgid "\\_<"
msgstr ""

#. type: table
#: original_texis/search.texi:1163
msgid ""
"matches the empty string, but only at the beginning of a symbol.  A symbol "
"is a sequence of one or more symbol-constituent characters.  A "
"symbol-constituent character is a character whose syntax is either @samp{w} "
"or @samp{_}.  @samp{\\_<} matches at the beginning of the buffer only if a "
"symbol-constituent character follows.  As with words, the syntax table "
"determines which characters are symbol-constituent."
msgstr ""

#. type: item
#: original_texis/search.texi:1164
#, no-wrap
msgid "\\_>"
msgstr ""

#. type: table
#: original_texis/search.texi:1168
msgid ""
"matches the empty string, but only at the end of a symbol.  @samp{\\_>} "
"matches at the end of the buffer only if the contents end with a "
"symbol-constituent character."
msgstr ""

#. type: item
#: original_texis/search.texi:1169
#, no-wrap
msgid "\\s@var{c}"
msgstr ""

#. type: table
#: original_texis/search.texi:1175
msgid ""
"matches any character whose syntax is @var{c}.  Here @var{c} is a character "
"that designates a particular syntax class: thus, @samp{w} for word "
"constituent, @samp{-} or @samp{ } for whitespace, @samp{.} for ordinary "
"punctuation, etc.  @xref{Syntax Tables,, Syntax Tables, elisp, The Emacs "
"Lisp Reference Manual}."
msgstr ""

#. type: item
#: original_texis/search.texi:1176
#, no-wrap
msgid "\\S@var{c}"
msgstr ""

#. type: table
#: original_texis/search.texi:1178
msgid "matches any character whose syntax is not @var{c}."
msgstr ""

#. type: cindex
#: original_texis/search.texi:1179
#, no-wrap
msgid "categories of characters"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1180
#, no-wrap
msgid "characters which belong to a specific language"
msgstr ""

#. type: findex
#: original_texis/search.texi:1181
#, no-wrap
msgid "describe-categories"
msgstr ""

#. type: item
#: original_texis/search.texi:1182
#, no-wrap
msgid "\\c@var{c}"
msgstr ""

#. type: table
#: original_texis/search.texi:1187
msgid ""
"matches any character that belongs to the category @var{c}.  For example, "
"@samp{\\cc} matches Chinese characters, @samp{\\cg} matches Greek "
"characters, etc.  For the description of the known categories, type @kbd{M-x "
"describe-categories @key{RET}}."
msgstr ""

#. type: item
#: original_texis/search.texi:1188
#, no-wrap
msgid "\\C@var{c}"
msgstr ""

#. type: table
#: original_texis/search.texi:1191
msgid "matches any character that does @emph{not} belong to category @var{c}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1196
msgid ""
"The constructs that pertain to words and syntax are controlled by the "
"setting of the syntax table.  @xref{Syntax Tables,, Syntax Tables, elisp, "
"The Emacs Lisp Reference Manual}."
msgstr ""

#. type: section
#: original_texis/search.texi:1198
#, no-wrap
msgid "Regular Expression Example"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1203
msgid ""
"Here is an example of a regexp---similar to the regexp that Emacs uses, by "
"default, to recognize the end of a sentence, not including the following "
"space (i.e., the variable @code{sentence-end-base}):"
msgstr ""

#. type: verbatim
#: original_texis/search.texi:1207
#, no-wrap
msgid "[.?!][]\\\"')}]*\n"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1214
msgid ""
"This contains two parts in succession: a character set matching period, "
"@samp{?}, or @samp{!}, and a character set matching close-brackets, quotes, "
"or parentheses, repeated zero or more times."
msgstr ""

#. type: section
#: original_texis/search.texi:1216
#, no-wrap
msgid "Lax Matching During Searching"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1218
#, no-wrap
msgid "lax search"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1219
#, no-wrap
msgid "character equivalence in search"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1226
msgid ""
"Normally, you'd want search commands to disregard certain minor differences "
"between the search string you type and the text being searched.  For "
"example, sequences of whitespace characters of different length are usually "
"perceived as equivalent; letter-case differences usually don't matter; etc.  "
"This is known as @dfn{character equivalence}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1229
msgid ""
"This section describes the Emacs lax search features, and how to tailor them "
"to your needs."
msgstr ""

#. type: cindex
#: original_texis/search.texi:1230
#, no-wrap
msgid "lax space matching in search"
msgstr ""

#. type: kindex
#: original_texis/search.texi:1231
#, no-wrap
msgid "M-s SPC @r{(Incremental search)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:1232
#, no-wrap
msgid "SPC @r{(Incremental search)}"
msgstr ""

#. type: findex
#: original_texis/search.texi:1233
#, no-wrap
msgid "isearch-toggle-lax-whitespace"
msgstr ""

#. type: vindex
#: original_texis/search.texi:1234
#, no-wrap
msgid "search-whitespace-regexp"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1248
msgid ""
"By default, search commands perform @dfn{lax space matching}: each space, or "
"sequence of spaces, matches any sequence of one or more whitespace "
"characters in the text.  (Incremental regexp search has a separate default; "
"see @ref{Regexp Search}.)  Hence, @w{@samp{foo bar}} matches @w{@samp{foo "
"bar}}, @w{@samp{foo@ @ bar}}, @w{@samp{foo@ @ @ bar}}, and so on (but not "
"@samp{foobar}).  More precisely, Emacs matches each sequence of space "
"characters in the search string to a regular expression specified by the "
"variable @code{search-whitespace-regexp}.  For example, to make spaces match "
"sequences of newlines as well as spaces, set it to "
"@samp{\"[[:space:]\\n]+\"}.  The default value of this variable depends on "
"the buffer's major mode; most major modes classify spaces, tabs, and "
"formfeed characters as whitespace."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1256
msgid ""
"If you want whitespace characters to match exactly, you can turn lax space "
"matching off by typing @kbd{M-s @key{SPC}} "
"(@code{isearch-toggle-lax-whitespace}) within an incremental search.  "
"Another @kbd{M-s @key{SPC}} turns lax space matching back on.  To disable "
"lax whitespace matching for all searches, change "
"@code{search-whitespace-regexp} to @code{nil}; then each space in the search "
"string matches exactly one space."
msgstr ""

#. type: cindex
#: original_texis/search.texi:1257
#, no-wrap
msgid "case folding in search"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1258
#, no-wrap
msgid "case-sensitivity and search"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1266
msgid ""
"Searches in Emacs by default ignore the case of the text they are searching "
"through, if you specify the search string in lower case.  Thus, if you "
"specify searching for @samp{foo}, then @samp{Foo} and @samp{fOO} also "
"match.  Regexps, and in particular character sets, behave likewise: "
"@samp{[ab]} matches @samp{a} or @samp{A} or @samp{b} or @samp{B}.  This "
"feature is known as @dfn{case folding}, and it is supported in both "
"incremental and non-incremental search modes."
msgstr ""

#. type: vindex
#: original_texis/search.texi:1267
#, no-wrap
msgid "search-upper-case"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1277
msgid ""
"An upper-case letter anywhere in the search string makes the search "
"case-sensitive.  Thus, searching for @samp{Foo} does not find @samp{foo} or "
"@samp{FOO}.  This applies to regular expression search as well as to literal "
"string search.  The effect ceases if you delete the upper-case letter from "
"the search string.  The variable @code{search-upper-case} controls this: if "
"it is non-@code{nil} (the default), an upper-case character in the search "
"string makes the search case-sensitive; setting it to @code{nil} disables "
"this effect of upper-case characters."
msgstr ""

#. type: vindex
#: original_texis/search.texi:1278
#, no-wrap
msgid "case-fold-search"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1286
msgid ""
"If you set the variable @code{case-fold-search} to @code{nil}, then all "
"letters must match exactly, including case.  This is a per-buffer variable; "
"altering the variable normally affects only the current buffer, unless you "
"change its default value.  @xref{Locals}.  This variable applies to "
"nonincremental searches also, including those performed by the replace "
"commands (@pxref{Replace}) and the minibuffer history matching commands "
"(@pxref{Minibuffer History})."
msgstr ""

#. type: kindex
#: original_texis/search.texi:1287
#, no-wrap
msgid "M-c @r{(Incremental search)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:1288
#, no-wrap
msgid "M-s c @r{(Incremental search)}"
msgstr ""

#. type: findex
#: original_texis/search.texi:1289
#, no-wrap
msgid "isearch-toggle-case-fold"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1295
msgid ""
"Typing @kbd{M-c} or @kbd{M-s c} (@code{isearch-toggle-case-fold})  within an "
"incremental search toggles the case sensitivity of that search.  The effect "
"does not extend beyond the current incremental search, but it does override "
"the effect of adding or removing an upper-case letter in the current search."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1301
msgid ""
"Several related variables control case-sensitivity of searching and matching "
"for specific commands or activities.  For instance, "
"@code{tags-case-fold-search} controls case sensitivity for @code{find-tag}.  "
"To find these variables, do @kbd{M-x apropos-variable @key{RET} "
"case-fold-search @key{RET}}."
msgstr ""

#. type: cindex
#: original_texis/search.texi:1302
#, no-wrap
msgid "character folding in search"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1303
#, no-wrap
msgid "equivalent character sequences"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1323
msgid ""
"Case folding disregards case distinctions among characters, making "
"upper-case characters match lower-case variants, and vice versa.  A "
"generalization of case folding is @dfn{character folding}, which disregards "
"wider classes of distinctions among similar characters.  For instance, under "
"character folding the letter @code{a} matches all of its accented cousins "
"like @code{@\"a} and @code{@'a}, i.e., the match disregards the diacritics "
"that distinguish these variants.  In addition, @code{a} matches other "
"characters that resemble it, or have it as part of their graphical "
"representation, such as @sc{u+249c parenthesized latin small letter a} and "
"@sc{u+2100 account of} (which looks like a small @code{a} over @code{c}).  "
"Similarly, the @acronym{ASCII} double-quote character @code{\"} matches all "
"the other variants of double quotes defined by the Unicode standard.  "
"Finally, character folding can make a sequence of one or more characters "
"match another sequence of a different length: for example, the sequence of "
"two characters @code{ff} matches @sc{u+fb00 latin small ligature ff}.  "
"Character sequences that are not identical, but match under character "
"folding are known as @dfn{equivalent character sequences}."
msgstr ""

#. type: kindex
#: original_texis/search.texi:1324
#, no-wrap
msgid "M-s ' @r{(Incremental Search)}"
msgstr ""

#. type: findex
#: original_texis/search.texi:1325
#, no-wrap
msgid "isearch-toggle-char-fold"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1335
msgid ""
"Generally, search commands in Emacs do not by default perform character "
"folding in order to match equivalent character sequences.  You can enable "
"this behavior by customizing the variable @code{search-default-mode} to "
"@code{char-fold-to-regexp}.  @xref{Search Customizations}.  Within an "
"incremental search, typing @kbd{M-s '} (@code{isearch-toggle-char-fold}) "
"toggles character folding, but only for that search.  (Replace commands have "
"a different default, controlled by a separate option; see @ref{Replacement "
"and Lax Matches}.)"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1340
msgid ""
"Like with case folding, typing an explicit variant of a character, such as "
"@code{@\"a}, as part of the search string disables character folding for "
"that search.  If you delete such a character from the search string, this "
"effect ceases."
msgstr ""

#. type: section
#: original_texis/search.texi:1342
#, no-wrap
msgid "Replacement Commands"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1343
#, no-wrap
msgid "replacement"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1344
#, no-wrap
msgid "search-and-replace commands"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1345
#, no-wrap
msgid "string substitution"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1346
#, no-wrap
msgid "global substitution"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1353
msgid ""
"Emacs provides several commands for performing search-and-replace "
"operations.  In addition to the simple @kbd{M-x replace-string} command, "
"there is @kbd{M-%} (@code{query-replace}), which presents each occurrence of "
"the search pattern and asks you whether to replace it."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1360
msgid ""
"The replace commands normally operate on the text from point to the end of "
"the buffer.  When the region is active, they operate on it instead "
"(@pxref{Mark}).  The basic replace commands replace one @dfn{search string} "
"(or regexp) with one @dfn{replacement string}.  It is possible to perform "
"several replacements in parallel, using the command "
"@code{expand-region-abbrevs} (@pxref{Expanding Abbrevs})."
msgstr ""

#. type: node
#: original_texis/search.texi:1367 original_texis/search.texi:1369
#, no-wrap
msgid "Unconditional Replace"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:1367
msgid "Replacing all matches for a string."
msgstr ""

#. type: node
#: original_texis/search.texi:1367 original_texis/search.texi:1399
#, no-wrap
msgid "Regexp Replace"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:1367
msgid "Replacing all matches for a regexp."
msgstr ""

#. type: node
#: original_texis/search.texi:1367 original_texis/search.texi:1487
#, no-wrap
msgid "Replacement and Lax Matches"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:1367
msgid "Lax searching for text to replace."
msgstr ""

#. type: subsection
#: original_texis/search.texi:1367 original_texis/search.texi:1547 original_texis/search.texi:1548
#, no-wrap
msgid "Query Replace"
msgstr ""

#. type: menuentry
#: original_texis/search.texi:1367
msgid "How to use querying."
msgstr ""

#. type: subsection
#: original_texis/search.texi:1370
#, no-wrap
msgid "Unconditional Replacement"
msgstr ""

#. type: findex
#: original_texis/search.texi:1371
#, no-wrap
msgid "replace-string"
msgstr ""

#. type: item
#: original_texis/search.texi:1374
#, no-wrap
msgid ""
"M-x replace-string @key{RET} @var{string} @key{RET} @var{newstring} "
"@key{RET}"
msgstr ""

#. type: table
#: original_texis/search.texi:1376
msgid "Replace every occurrence of @var{string} with @var{newstring}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1386
msgid ""
"To replace every instance of @samp{foo} after point with @samp{bar}, use the "
"command @kbd{M-x replace-string} with the two arguments @samp{foo} and "
"@samp{bar}.  Replacement happens only in the text after point, so if you "
"want to cover the whole buffer you must go to the beginning first.  All "
"occurrences up to the end of the buffer are replaced; to limit replacement "
"to part of the buffer, activate the region around that part.  When the "
"region is active, replacement is limited to the region (@pxref{Mark})."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1392
msgid ""
"When @code{replace-string} exits, it leaves point at the last occurrence "
"replaced.  It adds the prior position of point (where the "
"@code{replace-string} command was issued) to the mark ring, without "
"activating the mark; use @kbd{C-u C-@key{SPC}} to move back there.  "
"@xref{Mark Ring}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1395
msgid ""
"A prefix argument restricts replacement to matches that are surrounded by "
"word boundaries."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1398
msgid ""
"@xref{Replacement and Lax Matches}, for details about case-sensitivity and "
"character folding in replace commands."
msgstr ""

#. type: subsection
#: original_texis/search.texi:1400
#, no-wrap
msgid "Regexp Replacement"
msgstr ""

#. type: findex
#: original_texis/search.texi:1401
#, no-wrap
msgid "replace-regexp"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1406
msgid ""
"The @kbd{M-x replace-string} command replaces exact matches for a single "
"string.  The similar command @kbd{M-x replace-regexp} replaces any match for "
"a specified regular expression pattern (@pxref{Regexps})."
msgstr ""

#. type: item
#: original_texis/search.texi:1408
#, no-wrap
msgid ""
"M-x replace-regexp @key{RET} @var{regexp} @key{RET} @var{newstring} "
"@key{RET}"
msgstr ""

#. type: table
#: original_texis/search.texi:1410
msgid "Replace every match for @var{regexp} with @var{newstring}."
msgstr ""

#. type: cindex
#: original_texis/search.texi:1412
#, no-wrap
msgid "back reference, in regexp replacement"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1423
msgid ""
"In @code{replace-regexp}, the @var{newstring} need not be constant: it can "
"refer to all or part of what is matched by the @var{regexp}.  @samp{\\&} in "
"@var{newstring} stands for the entire match being replaced.  "
"@samp{\\@var{d}} in @var{newstring}, where @var{d} is a digit starting from "
"1, stands for whatever matched the @var{d}th parenthesized grouping in "
"@var{regexp}.  (This is called a ``back reference''.)  @samp{\\#} refers to "
"the count of replacements already made in this command, as a decimal "
"number.  In the first replacement, @samp{\\#} stands for @samp{0}; in the "
"second, for @samp{1}; and so on.  For example,"
msgstr ""

#. type: example
#: original_texis/search.texi:1426
#, no-wrap
msgid "M-x replace-regexp @key{RET} c[ad]+r @key{RET} \\&-safe @key{RET}\n"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1431
msgid ""
"replaces (for example) @samp{cadr} with @samp{cadr-safe} and @samp{cddr} "
"with @samp{cddr-safe}."
msgstr ""

#. type: example
#: original_texis/search.texi:1434
#, no-wrap
msgid "M-x replace-regexp @key{RET} \\(c[ad]+r\\)-safe @key{RET} \\1 @key{RET}\n"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1439
msgid ""
"performs the inverse transformation.  To include a @samp{\\} in the text to "
"replace with, you must enter @samp{\\\\}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1444
msgid ""
"If you want to enter part of the replacement string by hand each time, use "
"@samp{\\?} in the replacement string.  Each replacement will ask you to edit "
"the replacement string in the minibuffer, putting point where the @samp{\\?} "
"was."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1447
msgid ""
"The remainder of this subsection is intended for specialized tasks and "
"requires knowledge of Lisp.  Most readers can skip it."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1457
msgid ""
"You can use Lisp expressions to calculate parts of the replacement string.  "
"To do this, write @samp{\\,} followed by the expression in the replacement "
"string.  Each replacement calculates the value of the expression and "
"converts it to text without quoting (if it's a string, this means using the "
"string's contents), and uses it in the replacement string in place of the "
"expression itself.  If the expression is a symbol, one space in the "
"replacement string after the symbol name goes with the symbol name, so the "
"value replaces them both."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1467
msgid ""
"Inside such an expression, you can use some special sequences.  @samp{\\&} "
"and @samp{\\@var{d}} refer here, as usual, to the entire match as a string, "
"and to a submatch as a string.  @var{d} may be multiple digits, and the "
"value of @samp{\\@var{d}} is @code{nil} if the @var{d}'th parenthesized "
"grouping did not match.  You can also use @samp{\\#&} and @samp{\\#@var{d}} "
"to refer to those matches as numbers (this is valid when the match or "
"submatch has the form of a numeral).  @samp{\\#} here too stands for the "
"number of already-completed replacements."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1470
msgid ""
"Repeating our example to exchange @samp{x} and @samp{y}, we can thus do it "
"also this way:"
msgstr ""

#. type: example
#: original_texis/search.texi:1474
#, no-wrap
msgid ""
"M-x replace-regexp @key{RET} \\(x\\)\\|y @key{RET}\n"
"\\,(if \\1 \"y\" \"x\") @key{RET}\n"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1481
msgid ""
"For computing replacement strings for @samp{\\,}, the @code{format} function "
"is often useful (@pxref{Formatting Strings,,, elisp, The Emacs Lisp "
"Reference Manual}).  For example, to add consecutively numbered strings like "
"@samp{ABC00042} to columns 73 @w{to 80} (unless they are already occupied), "
"you can use"
msgstr ""

#. type: example
#: original_texis/search.texi:1485
#, no-wrap
msgid ""
"M-x replace-regexp @key{RET} ^.\\@{0,72\\@}$ @key{RET}\n"
"\\,(format \"%-72sABC%05d\" \\& \\#) @key{RET}\n"
msgstr ""

#. type: subsection
#: original_texis/search.texi:1488
#, no-wrap
msgid "Replace Commands and Lax Matches"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1494
msgid ""
"This subsection describes the behavior of replace commands with respect to "
"lax matches (@pxref{Lax Search}) and how to customize it.  In general, "
"replace commands mostly default to stricter matching than their search "
"counterparts."
msgstr ""

#. type: cindex
#: original_texis/search.texi:1495
#, no-wrap
msgid "lax space matching in replace commands"
msgstr ""

#. type: vindex
#: original_texis/search.texi:1496
#, no-wrap
msgid "replace-lax-whitespace"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1502
msgid ""
"Unlike incremental search, the replacement commands do not use lax space "
"matching (@pxref{Lax Search, lax space matching}) by default.  To enable lax "
"space matching for replacement, change the variable "
"@code{replace-lax-whitespace} to non-@code{nil}.  (This only affects how "
"Emacs finds the text to replace, not the replacement text.)"
msgstr ""

#. type: vindex
#: original_texis/search.texi:1503
#, no-wrap
msgid "replace-regexp-lax-whitespace"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1507
msgid ""
"A companion variable @code{replace-regexp-lax-whitespace} controls whether "
"@code{query-replace-regexp} uses lax whitespace matching when searching for "
"patterns."
msgstr ""

#. type: cindex
#: original_texis/search.texi:1508
#, no-wrap
msgid "case folding in replace commands"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1514
msgid ""
"If the first argument of a replace command is all lower case, the command "
"ignores case while searching for occurrences to replace---provided "
"@code{case-fold-search} is non-@code{nil}.  If @code{case-fold-search} is "
"set to @code{nil}, case is always significant in all searches."
msgstr ""

#. type: vindex
#: original_texis/search.texi:1515
#, no-wrap
msgid "case-replace"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1519
msgid ""
"In addition, when the @var{newstring} argument is all or partly lower case, "
"replacement commands try to preserve the case pattern of each occurrence.  "
"Thus, the command"
msgstr ""

#. type: example
#: original_texis/search.texi:1522
#, no-wrap
msgid "M-x replace-string @key{RET} foo @key{RET} bar @key{RET}\n"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1530
msgid ""
"replaces a lower case @samp{foo} with a lower case @samp{bar}, an all-caps "
"@samp{FOO} with @samp{BAR}, and a capitalized @samp{Foo} with @samp{Bar}.  "
"(These three alternatives---lower case, all caps, and capitalized, are the "
"only ones that @code{replace-string} can distinguish.)"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1537
msgid ""
"If upper-case letters are used in the replacement string, they remain upper "
"case every time that text is inserted.  If upper-case letters are used in "
"the first argument, the second argument is always substituted exactly as "
"given, with no case conversion.  Likewise, if either @code{case-replace} or "
"@code{case-fold-search} is set to @code{nil}, replacement is done without "
"case conversion."
msgstr ""

#. type: cindex
#: original_texis/search.texi:1538
#, no-wrap
msgid "character folding in replace commands"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1546
msgid ""
"The replacement commands by default do not use character folding (@pxref{Lax "
"Search, character folding}) when looking for the text to replace.  To enable "
"character folding for matching in @code{query-replace} and "
"@code{replace-string}, set the variable @code{replace-char-fold} to a "
"non-@code{nil} value.  (This setting does not affect the replacement text, "
"only how Emacs finds the text to replace.  It also doesn't affect "
"@code{replace-regexp}.)"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1549
#, no-wrap
msgid "query replace"
msgstr ""

#. type: item
#: original_texis/search.texi:1552
#, no-wrap
msgid "M-% @var{string} @key{RET} @var{newstring} @key{RET}"
msgstr ""

#. type: table
#: original_texis/search.texi:1554
msgid "Replace some occurrences of @var{string} with @var{newstring}."
msgstr ""

#. type: item
#: original_texis/search.texi:1554
#, no-wrap
msgid "C-M-% @var{regexp} @key{RET} @var{newstring} @key{RET}"
msgstr ""

#. type: table
#: original_texis/search.texi:1556
msgid "Replace some matches for @var{regexp} with @var{newstring}."
msgstr ""

#. type: kindex
#: original_texis/search.texi:1558
#, no-wrap
msgid "M-%"
msgstr ""

#. type: findex
#: original_texis/search.texi:1559
#, no-wrap
msgid "query-replace"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1570
msgid ""
"If you want to change only some of the occurrences of @samp{foo} to "
"@samp{bar}, not all of them, use @kbd{M-%} (@code{query-replace}).  This "
"command finds occurrences of @samp{foo} one by one, displays each occurrence "
"and asks you whether to replace it.  Aside from querying, "
"@code{query-replace} works just like @code{replace-string} "
"(@pxref{Unconditional Replace}).  In particular, it preserves case provided "
"@code{case-replace} is non-@code{nil}, as it normally is (@pxref{Replacement "
"and Lax Matches}).  A numeric argument means to consider only occurrences "
"that are bounded by word-delimiter characters.  A negative prefix argument "
"replaces backward."
msgstr ""

#. type: kindex
#: original_texis/search.texi:1571
#, no-wrap
msgid "C-M-%"
msgstr ""

#. type: findex
#: original_texis/search.texi:1572
#, no-wrap
msgid "query-replace-regexp"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1576
msgid ""
"@kbd{C-M-%} performs regexp search and replace "
"(@code{query-replace-regexp}).  It works like @code{replace-regexp} except "
"that it queries like @code{query-replace}."
msgstr ""

#. type: vindex
#: original_texis/search.texi:1577
#, no-wrap
msgid "query-replace-from-to-separator"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1588
msgid ""
"You can reuse earlier replacements with these commands.  When "
"@code{query-replace} or @code{query-replace-regexp} prompts for the search "
"string, use @kbd{M-p} and @kbd{M-n} to show previous replacements in the "
"form @samp{@var{from} -> @var{to}}, where @var{from} is the search pattern, "
"@var{to} is its replacement, and the separator between them is determined by "
"the value of the variable @code{query-replace-from-to-separator}.  Type "
"@key{RET} to select the desired replacement.  If the value of this variable "
"is @code{nil}, replacements are not added to the command history, and cannot "
"be reused."
msgstr ""

#. type: cindex
#: original_texis/search.texi:1589
#, no-wrap
msgid "faces for highlighting query replace"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1590
#, no-wrap
msgid "@code{query-replace} face"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1591
#, no-wrap
msgid "@code{lazy-highlight} face, in replace"
msgstr ""

#. type: vindex
#: original_texis/search.texi:1592
#, no-wrap
msgid "query-replace-highlight"
msgstr ""

#. type: vindex
#: original_texis/search.texi:1593
#, no-wrap
msgid "query-replace-lazy-highlight"
msgstr ""

#. type: vindex
#: original_texis/search.texi:1594
#, no-wrap
msgid "query-replace-show-replacement"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1605
msgid ""
"These commands highlight the current match using the face "
"@code{query-replace}.  You can disable this highlight by setting the "
"variable @code{query-replace-highlight} to @code{nil}.  They highlight other "
"matches using @code{lazy-highlight} just like incremental search "
"(@pxref{Incremental Search}); this can be disabled by setting "
"@code{query-replace-lazy-highlight} to @code{nil}.  By default, "
"@code{query-replace-regexp} will show the substituted replacement string for "
"the current match in the minibuffer.  If you want to keep special sequences "
"@samp{\\&} and @samp{\\@var{n}} unexpanded, customize "
"@code{query-replace-show-replacement} variable."
msgstr ""

#. type: vindex
#: original_texis/search.texi:1606
#, no-wrap
msgid "query-replace-skip-read-only"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1610
msgid ""
"The variable @code{query-replace-skip-read-only}, if set non-@code{nil}, "
"will cause replacement commands to ignore matches in read-only text.  The "
"default is not to ignore them."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1613
msgid ""
"The characters you can type when you are shown a match for the string or "
"regexp are:"
msgstr ""

#. type: kindex
#: original_texis/search.texi:1615
#, no-wrap
msgid "SPC @r{(query-replace)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:1616
#, no-wrap
msgid "DEL @r{(query-replace)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:1617
#, no-wrap
msgid ", @r{(query-replace)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:1618
#, no-wrap
msgid "RET @r{(query-replace)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:1619
#, no-wrap
msgid ". @r{(query-replace)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:1620
#, no-wrap
msgid "! @r{(query-replace)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:1621
#, no-wrap
msgid "^ @r{(query-replace)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:1622
#, no-wrap
msgid "C-r @r{(query-replace)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:1623
#, no-wrap
msgid "C-w @r{(query-replace)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:1624
#, no-wrap
msgid "C-l @r{(query-replace)}"
msgstr ""

#. type: key{#1}
#: original_texis/search.texi:1629
#, no-wrap
msgid "SPC"
msgstr ""

#. type: itemx
#: original_texis/search.texi:1630
#, no-wrap
msgid "y"
msgstr ""

#. type: table
#: original_texis/search.texi:1632
msgid "to replace the occurrence with @var{newstring}."
msgstr ""

#. type: key{#1}
#: original_texis/search.texi:1633
#, no-wrap
msgid "DEL"
msgstr ""

#. type: key{#1}
#: original_texis/search.texi:1634
#, no-wrap
msgid "Delete"
msgstr ""

#. type: key{#1}
#: original_texis/search.texi:1635
#, no-wrap
msgid "BACKSPACE"
msgstr ""

#. type: itemx
#: original_texis/search.texi:1636
#, no-wrap
msgid "n"
msgstr ""

#. type: table
#: original_texis/search.texi:1638
msgid "to skip to the next occurrence without replacing this one."
msgstr ""

#. type: item
#: original_texis/search.texi:1639
#, no-wrap
msgid ", @r{(Comma)}"
msgstr ""

#. type: table
#: original_texis/search.texi:1644
msgid ""
"to replace this occurrence and display the result.  You are then asked for "
"another input character to say what to do next.  Since the replacement has "
"already been made, @key{DEL} and @key{SPC} are equivalent in this situation; "
"both move to the next occurrence."
msgstr ""

#. type: table
#: original_texis/search.texi:1650
msgid ""
"You can type @kbd{C-r} at this point (see below) to alter the replaced "
"text.  You can also type @kbd{C-x u} to undo the replacement; this exits the "
"@code{query-replace}, so if you want to do further replacement you must use "
"@kbd{C-x @key{ESC} @key{ESC} @key{RET}} to restart (@pxref{Repetition})."
msgstr ""

#. type: key{#1}
#: original_texis/search.texi:1651
#, no-wrap
msgid "RET"
msgstr ""

#. type: itemx
#: original_texis/search.texi:1652
#, no-wrap
msgid "q"
msgstr ""

#. type: table
#: original_texis/search.texi:1654
msgid "to exit without doing any more replacements."
msgstr ""

#. type: item
#: original_texis/search.texi:1655
#, no-wrap
msgid ".@: @r{(Period)}"
msgstr ""

#. type: table
#: original_texis/search.texi:1658
msgid ""
"to replace this occurrence and then exit without searching for more "
"occurrences."
msgstr ""

#. type: item
#: original_texis/search.texi:1659
#, no-wrap
msgid "!"
msgstr ""

#. type: table
#: original_texis/search.texi:1661
msgid "to replace all remaining occurrences without asking again."
msgstr ""

#. type: table
#: original_texis/search.texi:1666
msgid ""
"to go back to the position of the previous occurrence (or what used to be an "
"occurrence), in case you changed it by mistake or want to reexamine it."
msgstr ""

#. type: item
#: original_texis/search.texi:1667
#, no-wrap
msgid "u"
msgstr ""

#. type: table
#: original_texis/search.texi:1670
msgid "to undo the last replacement and go back to where that replacement was made."
msgstr ""

#. type: item
#: original_texis/search.texi:1671
#, no-wrap
msgid "U"
msgstr ""

#. type: table
#: original_texis/search.texi:1674
msgid ""
"to undo all the replacements and go back to where the first replacement was "
"made."
msgstr ""

#. type: table
#: original_texis/search.texi:1680
msgid ""
"to enter a recursive editing level, in case the occurrence needs to be "
"edited rather than just replaced with @var{newstring}.  When you are done, "
"exit the recursive editing level with @kbd{C-M-c} to proceed to the next "
"occurrence.  @xref{Recursive Edit}."
msgstr ""

#. type: item
#: original_texis/search.texi:1681
#, no-wrap
msgid "C-w"
msgstr ""

#. type: table
#: original_texis/search.texi:1686
msgid ""
"to delete the occurrence, and then enter a recursive editing level as in "
"@kbd{C-r}.  Use the recursive edit to insert text to replace the deleted "
"occurrence of @var{string}.  When done, exit the recursive editing level "
"with @kbd{C-M-c} to proceed to the next occurrence."
msgstr ""

#. type: item
#: original_texis/search.texi:1687
#, no-wrap
msgid "e"
msgstr ""

#. type: table
#: original_texis/search.texi:1692
msgid ""
"to edit the replacement string in the minibuffer.  When you exit the "
"minibuffer by typing @key{RET}, the minibuffer contents replace the current "
"occurrence of the pattern.  They also become the new replacement string for "
"any further occurrences."
msgstr ""

#. type: item
#: original_texis/search.texi:1693
#, no-wrap
msgid "C-l"
msgstr ""

#. type: table
#: original_texis/search.texi:1696
msgid ""
"to redisplay the screen.  Then you must type another character to specify "
"what to do with this occurrence."
msgstr ""

#. type: item
#: original_texis/search.texi:1697
#, no-wrap
msgid "Y @r{(Upper-case)}"
msgstr ""

#. type: table
#: original_texis/search.texi:1703
msgid ""
"to replace all remaining occurrences in all remaining buffers in "
"multi-buffer replacements (like the Dired @kbd{Q} command that performs "
"query replace on selected files).  It answers this question and all "
"subsequent questions in the series with ``yes'', without further user "
"interaction."
msgstr ""

#. type: item
#: original_texis/search.texi:1704
#, no-wrap
msgid "N @r{(Upper-case)}"
msgstr ""

#. type: table
#: original_texis/search.texi:1709
msgid ""
"to skip to the next buffer in multi-buffer replacements without replacing "
"remaining occurrences in the current buffer.  It answers this question "
"``no'', gives up on the questions for the current buffer, and continues to "
"the next buffer in the sequence."
msgstr ""

#. type: item
#: original_texis/search.texi:1710
#, no-wrap
msgid "C-h"
msgstr ""

#. type: key{#1}
#: original_texis/search.texi:1712
#, no-wrap
msgid "F1"
msgstr ""

#. type: table
#: original_texis/search.texi:1715
msgid ""
"to display a message summarizing these options.  Then you must type another "
"character to specify what to do with this occurrence."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1721
msgid ""
"Aside from this, any other character exits the @code{query-replace}, and is "
"then reread as part of a key sequence.  Thus, if you type @kbd{C-k}, it "
"exits the @code{query-replace} and then kills to end of line.  In "
"particular, @kbd{C-g} simply exits the @code{query-replace}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1726
msgid ""
"To restart a @code{query-replace} once it is exited, use @kbd{C-x @key{ESC} "
"@key{ESC}}, which repeats the @code{query-replace} because it used the "
"minibuffer to read its arguments.  @xref{Repetition, C-x @key{ESC} "
"@key{ESC}}."
msgstr ""

#. type: cindex
#: original_texis/search.texi:1727
#, no-wrap
msgid "invisible text, and query-replace"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1730
msgid ""
"The option @code{search-invisible} determines how @code{query-replace} "
"treats invisible text.  @xref{Outline Search}."
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1735
msgid ""
"@xref{Operating on Files}, for the Dired @kbd{Q} command which performs "
"query replace on selected files.  See also @ref{Transforming File Names}, "
"for Dired commands to rename, copy, or link files by replacing regexp "
"matches in file names."
msgstr ""

#. type: section
#: original_texis/search.texi:1737
#, no-wrap
msgid "Other Search-and-Loop Commands"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1745
msgid ""
"Here are some other commands that find matches for a regular expression.  "
"They all ignore case in matching, if the pattern contains no upper-case "
"letters and @code{case-fold-search} is non-@code{nil}.  Aside from "
"@code{multi-occur} and @code{multi-occur-in-matching-buffers}, which always "
"search the whole buffer, all operate on the text from point to the end of "
"the buffer, or on the region if it is active."
msgstr ""

#. type: findex
#: original_texis/search.texi:1747
#, no-wrap
msgid "multi-isearch-buffers"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1748
#, no-wrap
msgid "isearch multiple buffers"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1749
#, no-wrap
msgid "multiple-buffer isearch"
msgstr ""

#. type: item
#: original_texis/search.texi:1750
#, no-wrap
msgid "M-x multi-isearch-buffers"
msgstr ""

#. type: table
#: original_texis/search.texi:1757
msgid ""
"Prompt for one or more buffer names, ending with @key{RET}; then, begin a "
"multi-buffer incremental search in those buffers.  (If the search fails in "
"one buffer, the next @kbd{C-s} tries searching the next specified buffer, "
"and so forth.)  With a prefix argument, prompt for a regexp and begin a "
"multi-buffer incremental search in buffers matching that regexp."
msgstr ""

#. type: findex
#: original_texis/search.texi:1758
#, no-wrap
msgid "multi-isearch-buffers-regexp"
msgstr ""

#. type: item
#: original_texis/search.texi:1759
#, no-wrap
msgid "M-x multi-isearch-buffers-regexp"
msgstr ""

#. type: table
#: original_texis/search.texi:1762
msgid ""
"This command is just like @code{multi-isearch-buffers}, except it performs "
"an incremental regexp search."
msgstr ""

#. type: findex
#: original_texis/search.texi:1763
#, no-wrap
msgid "multi-isearch-files"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1764
#, no-wrap
msgid "isearch multiple files"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1765
#, no-wrap
msgid "multiple-file isearch"
msgstr ""

#. type: item
#: original_texis/search.texi:1766
#, no-wrap
msgid "M-x multi-isearch-files"
msgstr ""

#. type: table
#: original_texis/search.texi:1773
msgid ""
"Prompt for one or more file names, ending with @key{RET}; then, begin a "
"multi-file incremental search in those files.  (If the search fails in one "
"file, the next @kbd{C-s} tries searching the next specified file, and so "
"forth.)  With a prefix argument, prompt for a regexp and begin a multi-file "
"incremental search in files matching that regexp."
msgstr ""

#. type: findex
#: original_texis/search.texi:1774
#, no-wrap
msgid "multi-isearch-files-regexp"
msgstr ""

#. type: item
#: original_texis/search.texi:1775
#, no-wrap
msgid "M-x multi-isearch-files-regexp"
msgstr ""

#. type: table
#: original_texis/search.texi:1778
msgid ""
"This command is just like @code{multi-isearch-files}, except it performs an "
"incremental regexp search."
msgstr ""

#. type: table
#: original_texis/search.texi:1782
msgid ""
"In some modes that set the buffer-local variable "
"@code{multi-isearch-next-buffer-function} (e.g., in Change Log mode)  a "
"multi-file incremental search is activated automatically."
msgstr ""

#. type: cindex
#: original_texis/search.texi:1783
#, no-wrap
msgid "Occur mode"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1784
#, no-wrap
msgid "mode, Occur"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1785
#, no-wrap
msgid "match (face name)"
msgstr ""

#. type: vindex
#: original_texis/search.texi:1786
#, no-wrap
msgid "list-matching-lines-default-context-lines"
msgstr ""

#. type: vindex
#: original_texis/search.texi:1787
#, no-wrap
msgid "list-matching-lines-jump-to-current-line"
msgstr ""

#. type: itemx
#: original_texis/search.texi:1790 original_texis/search.texi:1793
#, no-wrap
msgid "M-s o"
msgstr ""

#. type: findex
#: original_texis/search.texi:1791
#, no-wrap
msgid "occur"
msgstr ""

#. type: item
#: original_texis/search.texi:1792
#, no-wrap
msgid "M-x occur"
msgstr ""

#. type: table
#: original_texis/search.texi:1800
msgid ""
"Prompt for a regexp, and display a list showing each line in the buffer that "
"contains a match for it.  If you type @kbd{M-n} at the prompt, you can reuse "
"search strings from previous incremental searches.  The text that matched is "
"highlighted using the @code{match} face.  A numeric argument @var{n} "
"specifies that @var{n} lines of context are to be displayed before and after "
"each matching line."
msgstr ""

#. type: table
#: original_texis/search.texi:1807
msgid ""
"The default number of context lines is specified by the variable "
"@code{list-matching-lines-default-context-lines}.  When "
"@code{list-matching-lines-jump-to-current-line} is non-@code{nil} the "
"current line is shown highlighted with face "
"@code{list-matching-lines-current-line-face} and the point is set at the "
"first match after such line."
msgstr ""

#. type: table
#: original_texis/search.texi:1810
msgid ""
"You can also run @kbd{M-s o} when an incremental search is active; this uses "
"the current search string."
msgstr ""

#. type: table
#: original_texis/search.texi:1814
msgid ""
"Note that matches for the regexp you type are extended to include complete "
"lines, and a match that starts before the previous match ends is not "
"considered a match."
msgstr ""

#. type: kindex
#: original_texis/search.texi:1815
#, no-wrap
msgid "RET @r{(Occur mode)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:1816
#, no-wrap
msgid "o @r{(Occur mode)}"
msgstr ""

#. type: kindex
#: original_texis/search.texi:1817
#, no-wrap
msgid "C-o @r{(Occur mode)}"
msgstr ""

#. type: table
#: original_texis/search.texi:1824
msgid ""
"In the @file{*Occur*} buffer, you can click on each entry, or move point "
"there and type @key{RET}, to visit the corresponding position in the buffer "
"that was searched.  @kbd{o} and @kbd{C-o} display the match in another "
"window; @kbd{C-o} does not select it.  Alternatively, you can use the "
"@kbd{C-x `} (@code{next-error}) command to visit the occurrences one by one "
"(@pxref{Compilation Mode})."
msgstr ""

#. type: cindex
#: original_texis/search.texi:1825
#, no-wrap
msgid "Occur Edit mode"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1826
#, no-wrap
msgid "mode, Occur Edit"
msgstr ""

#. type: table
#: original_texis/search.texi:1831
msgid ""
"Typing @kbd{e} in the @file{*Occur*} buffer switches to Occur Edit mode, in "
"which edits made to the entries are also applied to the text in the "
"originating buffer.  Type @kbd{C-c C-c} to return to Occur mode."
msgstr ""

#. type: findex
#: original_texis/search.texi:1832
#, no-wrap
msgid "list-matching-lines"
msgstr ""

#. type: table
#: original_texis/search.texi:1835
msgid "The command @kbd{M-x list-matching-lines} is a synonym for @kbd{M-x occur}."
msgstr ""

#. type: findex
#: original_texis/search.texi:1836
#, no-wrap
msgid "multi-occur"
msgstr ""

#. type: item
#: original_texis/search.texi:1837
#, no-wrap
msgid "M-x multi-occur"
msgstr ""

#. type: table
#: original_texis/search.texi:1841
msgid ""
"This command is just like @code{occur}, except it is able to search through "
"multiple buffers.  It asks you to specify the buffer names one by one."
msgstr ""

#. type: findex
#: original_texis/search.texi:1842
#, no-wrap
msgid "multi-occur-in-matching-buffers"
msgstr ""

#. type: item
#: original_texis/search.texi:1843
#, no-wrap
msgid "M-x multi-occur-in-matching-buffers"
msgstr ""

#. type: table
#: original_texis/search.texi:1848
msgid ""
"This command is similar to @code{multi-occur}, except the buffers to search "
"are specified by a regular expression that matches visited file names.  With "
"a prefix argument, it uses the regular expression to match buffer names "
"instead."
msgstr ""

#. type: findex
#: original_texis/search.texi:1849
#, no-wrap
msgid "how-many"
msgstr ""

#. type: item
#: original_texis/search.texi:1850
#, no-wrap
msgid "M-x how-many"
msgstr ""

#. type: table
#: original_texis/search.texi:1854
msgid ""
"Prompt for a regexp, and print the number of matches for it in the buffer "
"after point.  If the region is active, this operates on the region instead."
msgstr ""

#. type: findex
#: original_texis/search.texi:1855
#, no-wrap
msgid "flush-lines"
msgstr ""

#. type: item
#: original_texis/search.texi:1856
#, no-wrap
msgid "M-x flush-lines"
msgstr ""

#. type: table
#: original_texis/search.texi:1863
msgid ""
"Prompt for a regexp, and delete each line that contains a match for it, "
"operating on the text after point.  This command deletes the current line if "
"it contains a match starting after point.  If the region is active, it "
"operates on the region instead; if a line partially contained in the region "
"contains a match entirely contained in the region, it is deleted."
msgstr ""

#. type: table
#: original_texis/search.texi:1868
msgid ""
"If a match is split across lines, @code{flush-lines} deletes all those "
"lines.  It deletes the lines before starting to look for the next match; "
"hence, it ignores a match starting on the same line at which another match "
"ended."
msgstr ""

#. type: findex
#: original_texis/search.texi:1869
#, no-wrap
msgid "keep-lines"
msgstr ""

#. type: item
#: original_texis/search.texi:1870
#, no-wrap
msgid "M-x keep-lines"
msgstr ""

#. type: table
#: original_texis/search.texi:1877
msgid ""
"Prompt for a regexp, and delete each line that @emph{does not} contain a "
"match for it, operating on the text after point.  If point is not at the "
"beginning of a line, this command always keeps the current line.  If the "
"region is active, the command operates on the region instead; it never "
"deletes lines that are only partially contained in the region (a newline "
"that ends a line counts as part of that line)."
msgstr ""

#. type: table
#: original_texis/search.texi:1879
msgid "If a match is split across lines, this command keeps all those lines."
msgstr ""

#. type: section
#: original_texis/search.texi:1882
#, no-wrap
msgid "Tailoring Search to Your Needs"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1883
#, no-wrap
msgid "search customizations"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1887
msgid ""
"This section describes miscellaneous search-related customizations not "
"described elsewhere."
msgstr ""

#. type: cindex
#: original_texis/search.texi:1888
#, no-wrap
msgid "default search mode"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1889
#, no-wrap
msgid "search mode, default"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1899
msgid ""
"The default search mode for the incremental search is specified by the "
"variable @code{search-default-mode}.  It can be @code{nil}, @code{t}, or a "
"function.  If it is @code{nil}, the default mode is to do literal searches "
"without character folding, but with case folding and lax-whitespace matches "
"as determined by @code{case-fold-search} and "
"@code{search-whitespace-regexp}, respectively (@pxref{Lax Search}).  If the "
"value is @code{t}, incremental search defaults to regexp searches.  The "
"default value specifies a function that only performs case folding and "
"lax-whitespace matching."
msgstr ""

#. type: vindex
#: original_texis/search.texi:1900
#, no-wrap
msgid "search-highlight"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1904
msgid ""
"The current match of an on-going incremental search is highlighted using the "
"@code{isearch} face.  This highlighting can be disabled by setting the "
"variable @code{search-highlight} to @code{nil}."
msgstr ""

#. type: cindex
#: original_texis/search.texi:1905
#, no-wrap
msgid "lazy highlighting customizations"
msgstr ""

#. type: vindex
#: original_texis/search.texi:1906
#, no-wrap
msgid "isearch-lazy-highlight"
msgstr ""

#. type: cindex
#: original_texis/search.texi:1907
#, no-wrap
msgid "@code{lazy-highlight} face"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1913
msgid ""
"The other matches for the search string that are visible on display are "
"highlighted using the @code{lazy-highlight} face.  Setting the variable "
"@code{isearch-lazy-highlight} to @code{nil} disables this highlighting.  "
"Here are some other variables that customize the lazy highlighting:"
msgstr ""

#. type: item
#: original_texis/search.texi:1915
#, no-wrap
msgid "lazy-highlight-initial-delay"
msgstr ""

#. type: table
#: original_texis/search.texi:1917
msgid "Time in seconds to wait before highlighting visible matches."
msgstr ""

#. type: item
#: original_texis/search.texi:1918
#, no-wrap
msgid "lazy-highlight-interval"
msgstr ""

#. type: table
#: original_texis/search.texi:1920
msgid "Time in seconds between highlighting successive matches."
msgstr ""

#. type: item
#: original_texis/search.texi:1921
#, no-wrap
msgid "lazy-highlight-max-at-a-time"
msgstr ""

#. type: table
#: original_texis/search.texi:1927
msgid ""
"The maximum number of matches to highlight before checking for input.  A "
"large number can take some time to highlight, so if you want to continue "
"searching and type @kbd{C-s} or @kbd{C-r} during that time, Emacs will not "
"respond until it finishes highlighting all those matches.  Thus, smaller "
"values make Emacs more responsive."
msgstr ""

#. type: vindex
#: original_texis/search.texi:1929
#, no-wrap
msgid "search-nonincremental-instead"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1937
msgid ""
"Normally, entering @key{RET} within incremental search when the search "
"string is empty launches a nonincremental search.  (Actually, it lets you "
"edit the search string, and the next @key{RET} does the search.)  However, "
"if you customize the variable @code{search-nonincremental-instead} to "
"@code{nil}, typing @key{RET} will always exit the incremental search, even "
"if the search string is empty."
msgstr ""

#. type: vindex
#: original_texis/search.texi:1938
#, no-wrap
msgid "isearch-hide-immediately"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1945
msgid ""
"By default, incremental search and query-replace commands match invisible "
"text, but hide any such matches as soon as the current match moves off the "
"invisible text.  If you customize the variable "
"@code{isearch-hide-immediately} to @code{nil}, any invisible text where "
"matches were found stays on display until the search or the replace command "
"exits."
msgstr ""

#. type: cindex
#: original_texis/search.texi:1946
#, no-wrap
msgid "search display on slow terminals"
msgstr ""

#. type: vindex
#: original_texis/search.texi:1947
#, no-wrap
msgid "search-slow-speed"
msgstr ""

#. type: vindex
#: original_texis/search.texi:1948
#, no-wrap
msgid "search-slow-window-lines"
msgstr ""

#. type: Plain text
#: original_texis/search.texi:1964
msgid ""
"Searching incrementally on slow terminals, such as displays connected to "
"remote machines over slow connection, could be annoying due to the need to "
"redraw large portions of the display as the search proceeds.  Emacs provides "
"a special display mode for slow terminals, whereby search pops up a separate "
"small window and displays the text surrounding the match in that window.  "
"Small windows display faster, so the annoying effect of slow speed is "
"alleviated.  The variable @code{search-slow-speed} determines the baud rate "
"threshold below which Emacs will use this display mode.  The variable "
"@code{search-slow-window-lines} controls the number of lines in the window "
"Emacs pops up for displaying the search results; the default is 1 line.  "
"Normally, this window will pop up at the bottom of the window that displays "
"the buffer where you start searching, but if the value of "
"@code{search-slow-window-lines} is negative, that means to put the window at "
"the top and give it the number of lines that is the absolute value of "
"@code{search-slow-window-lines}."
msgstr ""
